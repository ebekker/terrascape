// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: proto/tfplugin5.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Tfplugin5 {

  /// <summary>Holder for reflection information generated from proto/tfplugin5.proto</summary>
  public static partial class Tfplugin5Reflection {

    #region Descriptor
    /// <summary>File descriptor for proto/tfplugin5.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static Tfplugin5Reflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVwcm90by90ZnBsdWdpbjUucHJvdG8SCXRmcGx1Z2luNSItCgxEeW5hbWlj",
            "VmFsdWUSDwoHbXNncGFjaxgBIAEoDBIMCgRqc29uGAIgASgMIr0BCgpEaWFn",
            "bm9zdGljEjAKCHNldmVyaXR5GAEgASgOMh4udGZwbHVnaW41LkRpYWdub3N0",
            "aWMuU2V2ZXJpdHkSDwoHc3VtbWFyeRgCIAEoCRIOCgZkZXRhaWwYAyABKAkS",
            "KwoJYXR0cmlidXRlGAQgASgLMhgudGZwbHVnaW41LkF0dHJpYnV0ZVBhdGgi",
            "LwoIU2V2ZXJpdHkSCwoHSU5WQUxJRBAAEgkKBUVSUk9SEAESCwoHV0FSTklO",
            "RxACIqQBCg1BdHRyaWJ1dGVQYXRoEiwKBXN0ZXBzGAEgAygLMh0udGZwbHVn",
            "aW41LkF0dHJpYnV0ZVBhdGguU3RlcBplCgRTdGVwEhgKDmF0dHJpYnV0ZV9u",
            "YW1lGAEgASgJSAASHAoSZWxlbWVudF9rZXlfc3RyaW5nGAIgASgJSAASGQoP",
            "ZWxlbWVudF9rZXlfaW50GAMgASgDSABCCgoIc2VsZWN0b3IiLAoEU3RvcBoJ",
            "CgdSZXF1ZXN0GhkKCFJlc3BvbnNlEg0KBUVycm9yGAEgASgJInsKCFJhd1N0",
            "YXRlEgwKBGpzb24YASABKAwSMQoHZmxhdG1hcBgCIAMoCzIgLnRmcGx1Z2lu",
            "NS5SYXdTdGF0ZS5GbGF0bWFwRW50cnkaLgoMRmxhdG1hcEVudHJ5EgsKA2tl",
            "eRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEiuQQKBlNjaGVtYRIPCgd2ZXJz",
            "aW9uGAEgASgDEiYKBWJsb2NrGAIgASgLMhcudGZwbHVnaW41LlNjaGVtYS5C",
            "bG9jaxp9CgVCbG9jaxIPCgd2ZXJzaW9uGAEgASgDEi8KCmF0dHJpYnV0ZXMY",
            "AiADKAsyGy50ZnBsdWdpbjUuU2NoZW1hLkF0dHJpYnV0ZRIyCgtibG9ja190",
            "eXBlcxgDIAMoCzIdLnRmcGx1Z2luNS5TY2hlbWEuTmVzdGVkQmxvY2sahQEK",
            "CUF0dHJpYnV0ZRIMCgRuYW1lGAEgASgJEgwKBHR5cGUYAiABKAwSEwoLZGVz",
            "Y3JpcHRpb24YAyABKAkSEAoIcmVxdWlyZWQYBCABKAgSEAoIb3B0aW9uYWwY",
            "BSABKAgSEAoIY29tcHV0ZWQYBiABKAgSEQoJc2Vuc2l0aXZlGAcgASgIGu4B",
            "CgtOZXN0ZWRCbG9jaxIRCgl0eXBlX25hbWUYASABKAkSJgoFYmxvY2sYAiAB",
            "KAsyFy50ZnBsdWdpbjUuU2NoZW1hLkJsb2NrEjoKB25lc3RpbmcYAyABKA4y",
            "KS50ZnBsdWdpbjUuU2NoZW1hLk5lc3RlZEJsb2NrLk5lc3RpbmdNb2RlEhEK",
            "CW1pbl9pdGVtcxgEIAEoAxIRCgltYXhfaXRlbXMYBSABKAMiQgoLTmVzdGlu",
            "Z01vZGUSCwoHSU5WQUxJRBAAEgoKBlNJTkdMRRABEggKBExJU1QQAhIHCgNT",
            "RVQQAxIHCgNNQVAQBCLFAwoRR2V0UHJvdmlkZXJTY2hlbWEaCQoHUmVxdWVz",
            "dBqkAwoIUmVzcG9uc2USIwoIcHJvdmlkZXIYASABKAsyES50ZnBsdWdpbjUu",
            "U2NoZW1hElQKEHJlc291cmNlX3NjaGVtYXMYAiADKAsyOi50ZnBsdWdpbjUu",
            "R2V0UHJvdmlkZXJTY2hlbWEuUmVzcG9uc2UuUmVzb3VyY2VTY2hlbWFzRW50",
            "cnkSWQoTZGF0YV9zb3VyY2Vfc2NoZW1hcxgDIAMoCzI8LnRmcGx1Z2luNS5H",
            "ZXRQcm92aWRlclNjaGVtYS5SZXNwb25zZS5EYXRhU291cmNlU2NoZW1hc0Vu",
            "dHJ5EioKC2RpYWdub3N0aWNzGAQgAygLMhUudGZwbHVnaW41LkRpYWdub3N0",
            "aWMaSQoUUmVzb3VyY2VTY2hlbWFzRW50cnkSCwoDa2V5GAEgASgJEiAKBXZh",
            "bHVlGAIgASgLMhEudGZwbHVnaW41LlNjaGVtYToCOAEaSwoWRGF0YVNvdXJj",
            "ZVNjaGVtYXNFbnRyeRILCgNrZXkYASABKAkSIAoFdmFsdWUYAiABKAsyES50",
            "ZnBsdWdpbjUuU2NoZW1hOgI4ASK1AQoVUHJlcGFyZVByb3ZpZGVyQ29uZmln",
            "GjIKB1JlcXVlc3QSJwoGY29uZmlnGAEgASgLMhcudGZwbHVnaW41LkR5bmFt",
            "aWNWYWx1ZRpoCghSZXNwb25zZRIwCg9wcmVwYXJlZF9jb25maWcYASABKAsy",
            "Fy50ZnBsdWdpbjUuRHluYW1pY1ZhbHVlEioKC2RpYWdub3N0aWNzGAIgAygL",
            "MhUudGZwbHVnaW41LkRpYWdub3N0aWMi1gEKFFVwZ3JhZGVSZXNvdXJjZVN0",
            "YXRlGlUKB1JlcXVlc3QSEQoJdHlwZV9uYW1lGAEgASgJEg8KB3ZlcnNpb24Y",
            "AiABKAMSJgoJcmF3X3N0YXRlGAMgASgLMhMudGZwbHVnaW41LlJhd1N0YXRl",
            "GmcKCFJlc3BvbnNlEi8KDnVwZ3JhZGVkX3N0YXRlGAEgASgLMhcudGZwbHVn",
            "aW41LkR5bmFtaWNWYWx1ZRIqCgtkaWFnbm9zdGljcxgCIAMoCzIVLnRmcGx1",
            "Z2luNS5EaWFnbm9zdGljIpsBChpWYWxpZGF0ZVJlc291cmNlVHlwZUNvbmZp",
            "ZxpFCgdSZXF1ZXN0EhEKCXR5cGVfbmFtZRgBIAEoCRInCgZjb25maWcYAiAB",
            "KAsyFy50ZnBsdWdpbjUuRHluYW1pY1ZhbHVlGjYKCFJlc3BvbnNlEioKC2Rp",
            "YWdub3N0aWNzGAEgAygLMhUudGZwbHVnaW41LkRpYWdub3N0aWMimQEKGFZh",
            "bGlkYXRlRGF0YVNvdXJjZUNvbmZpZxpFCgdSZXF1ZXN0EhEKCXR5cGVfbmFt",
            "ZRgBIAEoCRInCgZjb25maWcYAiABKAsyFy50ZnBsdWdpbjUuRHluYW1pY1Zh",
            "bHVlGjYKCFJlc3BvbnNlEioKC2RpYWdub3N0aWNzGAEgAygLMhUudGZwbHVn",
            "aW41LkRpYWdub3N0aWMikgEKCUNvbmZpZ3VyZRpNCgdSZXF1ZXN0EhkKEXRl",
            "cnJhZm9ybV92ZXJzaW9uGAEgASgJEicKBmNvbmZpZxgCIAEoCzIXLnRmcGx1",
            "Z2luNS5EeW5hbWljVmFsdWUaNgoIUmVzcG9uc2USKgoLZGlhZ25vc3RpY3MY",
            "ASADKAsyFS50ZnBsdWdpbjUuRGlhZ25vc3RpYyLAAQoMUmVhZFJlc291cmNl",
            "GkwKB1JlcXVlc3QSEQoJdHlwZV9uYW1lGAEgASgJEi4KDWN1cnJlbnRfc3Rh",
            "dGUYAiABKAsyFy50ZnBsdWdpbjUuRHluYW1pY1ZhbHVlGmIKCFJlc3BvbnNl",
            "EioKCW5ld19zdGF0ZRgBIAEoCzIXLnRmcGx1Z2luNS5EeW5hbWljVmFsdWUS",
            "KgoLZGlhZ25vc3RpY3MYAiADKAsyFS50ZnBsdWdpbjUuRGlhZ25vc3RpYyKo",
            "AwoSUGxhblJlc291cmNlQ2hhbmdlGr8BCgdSZXF1ZXN0EhEKCXR5cGVfbmFt",
            "ZRgBIAEoCRIsCgtwcmlvcl9zdGF0ZRgCIAEoCzIXLnRmcGx1Z2luNS5EeW5h",
            "bWljVmFsdWUSMwoScHJvcG9zZWRfbmV3X3N0YXRlGAMgASgLMhcudGZwbHVn",
            "aW41LkR5bmFtaWNWYWx1ZRInCgZjb25maWcYBCABKAsyFy50ZnBsdWdpbjUu",
            "RHluYW1pY1ZhbHVlEhUKDXByaW9yX3ByaXZhdGUYBSABKAwazwEKCFJlc3Bv",
            "bnNlEi4KDXBsYW5uZWRfc3RhdGUYASABKAsyFy50ZnBsdWdpbjUuRHluYW1p",
            "Y1ZhbHVlEjIKEHJlcXVpcmVzX3JlcGxhY2UYAiADKAsyGC50ZnBsdWdpbjUu",
            "QXR0cmlidXRlUGF0aBIXCg9wbGFubmVkX3ByaXZhdGUYAyABKAwSKgoLZGlh",
            "Z25vc3RpY3MYBCADKAsyFS50ZnBsdWdpbjUuRGlhZ25vc3RpYxIaChJsZWdh",
            "Y3lfdHlwZV9zeXN0ZW0YBSABKAgi5gIKE0FwcGx5UmVzb3VyY2VDaGFuZ2Ua",
            "vAEKB1JlcXVlc3QSEQoJdHlwZV9uYW1lGAEgASgJEiwKC3ByaW9yX3N0YXRl",
            "GAIgASgLMhcudGZwbHVnaW41LkR5bmFtaWNWYWx1ZRIuCg1wbGFubmVkX3N0",
            "YXRlGAMgASgLMhcudGZwbHVnaW41LkR5bmFtaWNWYWx1ZRInCgZjb25maWcY",
            "BCABKAsyFy50ZnBsdWdpbjUuRHluYW1pY1ZhbHVlEhcKD3BsYW5uZWRfcHJp",
            "dmF0ZRgFIAEoDBqPAQoIUmVzcG9uc2USKgoJbmV3X3N0YXRlGAEgASgLMhcu",
            "dGZwbHVnaW41LkR5bmFtaWNWYWx1ZRIPCgdwcml2YXRlGAIgASgMEioKC2Rp",
            "YWdub3N0aWNzGAMgAygLMhUudGZwbHVnaW41LkRpYWdub3N0aWMSGgoSbGVn",
            "YWN5X3R5cGVfc3lzdGVtGAQgASgIIqUCChNJbXBvcnRSZXNvdXJjZVN0YXRl",
            "GigKB1JlcXVlc3QSEQoJdHlwZV9uYW1lGAEgASgJEgoKAmlkGAIgASgJGl4K",
            "EEltcG9ydGVkUmVzb3VyY2USEQoJdHlwZV9uYW1lGAEgASgJEiYKBXN0YXRl",
            "GAIgASgLMhcudGZwbHVnaW41LkR5bmFtaWNWYWx1ZRIPCgdwcml2YXRlGAMg",
            "ASgMGoMBCghSZXNwb25zZRJLChJpbXBvcnRlZF9yZXNvdXJjZXMYASADKAsy",
            "Ly50ZnBsdWdpbjUuSW1wb3J0UmVzb3VyY2VTdGF0ZS5JbXBvcnRlZFJlc291",
            "cmNlEioKC2RpYWdub3N0aWNzGAIgAygLMhUudGZwbHVnaW41LkRpYWdub3N0",
            "aWMitwEKDlJlYWREYXRhU291cmNlGkUKB1JlcXVlc3QSEQoJdHlwZV9uYW1l",
            "GAEgASgJEicKBmNvbmZpZxgCIAEoCzIXLnRmcGx1Z2luNS5EeW5hbWljVmFs",
            "dWUaXgoIUmVzcG9uc2USJgoFc3RhdGUYASABKAsyFy50ZnBsdWdpbjUuRHlu",
            "YW1pY1ZhbHVlEioKC2RpYWdub3N0aWNzGAIgAygLMhUudGZwbHVnaW41LkRp",
            "YWdub3N0aWMigQEKFEdldFByb3Zpc2lvbmVyU2NoZW1hGgkKB1JlcXVlc3Qa",
            "XgoIUmVzcG9uc2USJgoLcHJvdmlzaW9uZXIYASABKAsyES50ZnBsdWdpbjUu",
            "U2NoZW1hEioKC2RpYWdub3N0aWNzGAIgAygLMhUudGZwbHVnaW41LkRpYWdu",
            "b3N0aWMihwEKGVZhbGlkYXRlUHJvdmlzaW9uZXJDb25maWcaMgoHUmVxdWVz",
            "dBInCgZjb25maWcYASABKAsyFy50ZnBsdWdpbjUuRHluYW1pY1ZhbHVlGjYK",
            "CFJlc3BvbnNlEioKC2RpYWdub3N0aWNzGAEgAygLMhUudGZwbHVnaW41LkRp",
            "YWdub3N0aWMivAEKEVByb3Zpc2lvblJlc291cmNlGl8KB1JlcXVlc3QSJwoG",
            "Y29uZmlnGAEgASgLMhcudGZwbHVnaW41LkR5bmFtaWNWYWx1ZRIrCgpjb25u",
            "ZWN0aW9uGAIgASgLMhcudGZwbHVnaW41LkR5bmFtaWNWYWx1ZRpGCghSZXNw",
            "b25zZRIOCgZvdXRwdXQYASABKAkSKgoLZGlhZ25vc3RpY3MYAiADKAsyFS50",
            "ZnBsdWdpbjUuRGlhZ25vc3RpYzKXCQoIUHJvdmlkZXISWAoJR2V0U2NoZW1h",
            "EiQudGZwbHVnaW41LkdldFByb3ZpZGVyU2NoZW1hLlJlcXVlc3QaJS50ZnBs",
            "dWdpbjUuR2V0UHJvdmlkZXJTY2hlbWEuUmVzcG9uc2USbAoVUHJlcGFyZVBy",
            "b3ZpZGVyQ29uZmlnEigudGZwbHVnaW41LlByZXBhcmVQcm92aWRlckNvbmZp",
            "Zy5SZXF1ZXN0GikudGZwbHVnaW41LlByZXBhcmVQcm92aWRlckNvbmZpZy5S",
            "ZXNwb25zZRJ7ChpWYWxpZGF0ZVJlc291cmNlVHlwZUNvbmZpZxItLnRmcGx1",
            "Z2luNS5WYWxpZGF0ZVJlc291cmNlVHlwZUNvbmZpZy5SZXF1ZXN0Gi4udGZw",
            "bHVnaW41LlZhbGlkYXRlUmVzb3VyY2VUeXBlQ29uZmlnLlJlc3BvbnNlEnUK",
            "GFZhbGlkYXRlRGF0YVNvdXJjZUNvbmZpZxIrLnRmcGx1Z2luNS5WYWxpZGF0",
            "ZURhdGFTb3VyY2VDb25maWcuUmVxdWVzdBosLnRmcGx1Z2luNS5WYWxpZGF0",
            "ZURhdGFTb3VyY2VDb25maWcuUmVzcG9uc2USaQoUVXBncmFkZVJlc291cmNl",
            "U3RhdGUSJy50ZnBsdWdpbjUuVXBncmFkZVJlc291cmNlU3RhdGUuUmVxdWVz",
            "dBooLnRmcGx1Z2luNS5VcGdyYWRlUmVzb3VyY2VTdGF0ZS5SZXNwb25zZRJI",
            "CglDb25maWd1cmUSHC50ZnBsdWdpbjUuQ29uZmlndXJlLlJlcXVlc3QaHS50",
            "ZnBsdWdpbjUuQ29uZmlndXJlLlJlc3BvbnNlElEKDFJlYWRSZXNvdXJjZRIf",
            "LnRmcGx1Z2luNS5SZWFkUmVzb3VyY2UuUmVxdWVzdBogLnRmcGx1Z2luNS5S",
            "ZWFkUmVzb3VyY2UuUmVzcG9uc2USYwoSUGxhblJlc291cmNlQ2hhbmdlEiUu",
            "dGZwbHVnaW41LlBsYW5SZXNvdXJjZUNoYW5nZS5SZXF1ZXN0GiYudGZwbHVn",
            "aW41LlBsYW5SZXNvdXJjZUNoYW5nZS5SZXNwb25zZRJmChNBcHBseVJlc291",
            "cmNlQ2hhbmdlEiYudGZwbHVnaW41LkFwcGx5UmVzb3VyY2VDaGFuZ2UuUmVx",
            "dWVzdBonLnRmcGx1Z2luNS5BcHBseVJlc291cmNlQ2hhbmdlLlJlc3BvbnNl",
            "EmYKE0ltcG9ydFJlc291cmNlU3RhdGUSJi50ZnBsdWdpbjUuSW1wb3J0UmVz",
            "b3VyY2VTdGF0ZS5SZXF1ZXN0GicudGZwbHVnaW41LkltcG9ydFJlc291cmNl",
            "U3RhdGUuUmVzcG9uc2USVwoOUmVhZERhdGFTb3VyY2USIS50ZnBsdWdpbjUu",
            "UmVhZERhdGFTb3VyY2UuUmVxdWVzdBoiLnRmcGx1Z2luNS5SZWFkRGF0YVNv",
            "dXJjZS5SZXNwb25zZRI5CgRTdG9wEhcudGZwbHVnaW41LlN0b3AuUmVxdWVz",
            "dBoYLnRmcGx1Z2luNS5TdG9wLlJlc3BvbnNlMoYDCgtQcm92aXNpb25lchJe",
            "CglHZXRTY2hlbWESJy50ZnBsdWdpbjUuR2V0UHJvdmlzaW9uZXJTY2hlbWEu",
            "UmVxdWVzdBooLnRmcGx1Z2luNS5HZXRQcm92aXNpb25lclNjaGVtYS5SZXNw",
            "b25zZRJ4ChlWYWxpZGF0ZVByb3Zpc2lvbmVyQ29uZmlnEiwudGZwbHVnaW41",
            "LlZhbGlkYXRlUHJvdmlzaW9uZXJDb25maWcuUmVxdWVzdBotLnRmcGx1Z2lu",
            "NS5WYWxpZGF0ZVByb3Zpc2lvbmVyQ29uZmlnLlJlc3BvbnNlEmIKEVByb3Zp",
            "c2lvblJlc291cmNlEiQudGZwbHVnaW41LlByb3Zpc2lvblJlc291cmNlLlJl",
            "cXVlc3QaJS50ZnBsdWdpbjUuUHJvdmlzaW9uUmVzb3VyY2UuUmVzcG9uc2Uw",
            "ARI5CgRTdG9wEhcudGZwbHVnaW41LlN0b3AuUmVxdWVzdBoYLnRmcGx1Z2lu",
            "NS5TdG9wLlJlc3BvbnNlYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Tfplugin5.DynamicValue), global::Tfplugin5.DynamicValue.Parser, new[]{ "Msgpack", "Json" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tfplugin5.Diagnostic), global::Tfplugin5.Diagnostic.Parser, new[]{ "Severity", "Summary", "Detail", "Attribute" }, null, new[]{ typeof(global::Tfplugin5.Diagnostic.Types.Severity) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tfplugin5.AttributePath), global::Tfplugin5.AttributePath.Parser, new[]{ "Steps" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Tfplugin5.AttributePath.Types.Step), global::Tfplugin5.AttributePath.Types.Step.Parser, new[]{ "AttributeName", "ElementKeyString", "ElementKeyInt" }, new[]{ "Selector" }, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tfplugin5.Stop), global::Tfplugin5.Stop.Parser, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Tfplugin5.Stop.Types.Request), global::Tfplugin5.Stop.Types.Request.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tfplugin5.Stop.Types.Response), global::Tfplugin5.Stop.Types.Response.Parser, new[]{ "Error" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tfplugin5.RawState), global::Tfplugin5.RawState.Parser, new[]{ "Json", "Flatmap" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tfplugin5.Schema), global::Tfplugin5.Schema.Parser, new[]{ "Version", "Block" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Tfplugin5.Schema.Types.Block), global::Tfplugin5.Schema.Types.Block.Parser, new[]{ "Version", "Attributes", "BlockTypes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tfplugin5.Schema.Types.Attribute), global::Tfplugin5.Schema.Types.Attribute.Parser, new[]{ "Name", "Type", "Description", "Required", "Optional", "Computed", "Sensitive" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tfplugin5.Schema.Types.NestedBlock), global::Tfplugin5.Schema.Types.NestedBlock.Parser, new[]{ "TypeName", "Block", "Nesting", "MinItems", "MaxItems" }, null, new[]{ typeof(global::Tfplugin5.Schema.Types.NestedBlock.Types.NestingMode) }, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tfplugin5.GetProviderSchema), global::Tfplugin5.GetProviderSchema.Parser, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Tfplugin5.GetProviderSchema.Types.Request), global::Tfplugin5.GetProviderSchema.Types.Request.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tfplugin5.GetProviderSchema.Types.Response), global::Tfplugin5.GetProviderSchema.Types.Response.Parser, new[]{ "Provider", "ResourceSchemas", "DataSourceSchemas", "Diagnostics" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, })}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tfplugin5.PrepareProviderConfig), global::Tfplugin5.PrepareProviderConfig.Parser, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Tfplugin5.PrepareProviderConfig.Types.Request), global::Tfplugin5.PrepareProviderConfig.Types.Request.Parser, new[]{ "Config" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tfplugin5.PrepareProviderConfig.Types.Response), global::Tfplugin5.PrepareProviderConfig.Types.Response.Parser, new[]{ "PreparedConfig", "Diagnostics" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tfplugin5.UpgradeResourceState), global::Tfplugin5.UpgradeResourceState.Parser, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Tfplugin5.UpgradeResourceState.Types.Request), global::Tfplugin5.UpgradeResourceState.Types.Request.Parser, new[]{ "TypeName", "Version", "RawState" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tfplugin5.UpgradeResourceState.Types.Response), global::Tfplugin5.UpgradeResourceState.Types.Response.Parser, new[]{ "UpgradedState", "Diagnostics" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tfplugin5.ValidateResourceTypeConfig), global::Tfplugin5.ValidateResourceTypeConfig.Parser, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Tfplugin5.ValidateResourceTypeConfig.Types.Request), global::Tfplugin5.ValidateResourceTypeConfig.Types.Request.Parser, new[]{ "TypeName", "Config" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tfplugin5.ValidateResourceTypeConfig.Types.Response), global::Tfplugin5.ValidateResourceTypeConfig.Types.Response.Parser, new[]{ "Diagnostics" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tfplugin5.ValidateDataSourceConfig), global::Tfplugin5.ValidateDataSourceConfig.Parser, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Tfplugin5.ValidateDataSourceConfig.Types.Request), global::Tfplugin5.ValidateDataSourceConfig.Types.Request.Parser, new[]{ "TypeName", "Config" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tfplugin5.ValidateDataSourceConfig.Types.Response), global::Tfplugin5.ValidateDataSourceConfig.Types.Response.Parser, new[]{ "Diagnostics" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tfplugin5.Configure), global::Tfplugin5.Configure.Parser, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Tfplugin5.Configure.Types.Request), global::Tfplugin5.Configure.Types.Request.Parser, new[]{ "TerraformVersion", "Config" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tfplugin5.Configure.Types.Response), global::Tfplugin5.Configure.Types.Response.Parser, new[]{ "Diagnostics" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tfplugin5.ReadResource), global::Tfplugin5.ReadResource.Parser, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Tfplugin5.ReadResource.Types.Request), global::Tfplugin5.ReadResource.Types.Request.Parser, new[]{ "TypeName", "CurrentState" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tfplugin5.ReadResource.Types.Response), global::Tfplugin5.ReadResource.Types.Response.Parser, new[]{ "NewState", "Diagnostics" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tfplugin5.PlanResourceChange), global::Tfplugin5.PlanResourceChange.Parser, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Tfplugin5.PlanResourceChange.Types.Request), global::Tfplugin5.PlanResourceChange.Types.Request.Parser, new[]{ "TypeName", "PriorState", "ProposedNewState", "Config", "PriorPrivate" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tfplugin5.PlanResourceChange.Types.Response), global::Tfplugin5.PlanResourceChange.Types.Response.Parser, new[]{ "PlannedState", "RequiresReplace", "PlannedPrivate", "Diagnostics", "LegacyTypeSystem" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tfplugin5.ApplyResourceChange), global::Tfplugin5.ApplyResourceChange.Parser, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Tfplugin5.ApplyResourceChange.Types.Request), global::Tfplugin5.ApplyResourceChange.Types.Request.Parser, new[]{ "TypeName", "PriorState", "PlannedState", "Config", "PlannedPrivate" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tfplugin5.ApplyResourceChange.Types.Response), global::Tfplugin5.ApplyResourceChange.Types.Response.Parser, new[]{ "NewState", "Private", "Diagnostics", "LegacyTypeSystem" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tfplugin5.ImportResourceState), global::Tfplugin5.ImportResourceState.Parser, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Tfplugin5.ImportResourceState.Types.Request), global::Tfplugin5.ImportResourceState.Types.Request.Parser, new[]{ "TypeName", "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tfplugin5.ImportResourceState.Types.ImportedResource), global::Tfplugin5.ImportResourceState.Types.ImportedResource.Parser, new[]{ "TypeName", "State", "Private" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tfplugin5.ImportResourceState.Types.Response), global::Tfplugin5.ImportResourceState.Types.Response.Parser, new[]{ "ImportedResources", "Diagnostics" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tfplugin5.ReadDataSource), global::Tfplugin5.ReadDataSource.Parser, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Tfplugin5.ReadDataSource.Types.Request), global::Tfplugin5.ReadDataSource.Types.Request.Parser, new[]{ "TypeName", "Config" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tfplugin5.ReadDataSource.Types.Response), global::Tfplugin5.ReadDataSource.Types.Response.Parser, new[]{ "State", "Diagnostics" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tfplugin5.GetProvisionerSchema), global::Tfplugin5.GetProvisionerSchema.Parser, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Tfplugin5.GetProvisionerSchema.Types.Request), global::Tfplugin5.GetProvisionerSchema.Types.Request.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tfplugin5.GetProvisionerSchema.Types.Response), global::Tfplugin5.GetProvisionerSchema.Types.Response.Parser, new[]{ "Provisioner", "Diagnostics" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tfplugin5.ValidateProvisionerConfig), global::Tfplugin5.ValidateProvisionerConfig.Parser, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Tfplugin5.ValidateProvisionerConfig.Types.Request), global::Tfplugin5.ValidateProvisionerConfig.Types.Request.Parser, new[]{ "Config" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tfplugin5.ValidateProvisionerConfig.Types.Response), global::Tfplugin5.ValidateProvisionerConfig.Types.Response.Parser, new[]{ "Diagnostics" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tfplugin5.ProvisionResource), global::Tfplugin5.ProvisionResource.Parser, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Tfplugin5.ProvisionResource.Types.Request), global::Tfplugin5.ProvisionResource.Types.Request.Parser, new[]{ "Config", "Connection" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tfplugin5.ProvisionResource.Types.Response), global::Tfplugin5.ProvisionResource.Types.Response.Parser, new[]{ "Output", "Diagnostics" }, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// DynamicValue is an opaque encoding of terraform data, with the field name
  /// indicating the encoding scheme used.
  /// </summary>
  public sealed partial class DynamicValue : pb::IMessage<DynamicValue> {
    private static readonly pb::MessageParser<DynamicValue> _parser = new pb::MessageParser<DynamicValue>(() => new DynamicValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DynamicValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tfplugin5.Tfplugin5Reflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DynamicValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DynamicValue(DynamicValue other) : this() {
      msgpack_ = other.msgpack_;
      json_ = other.json_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DynamicValue Clone() {
      return new DynamicValue(this);
    }

    /// <summary>Field number for the "msgpack" field.</summary>
    public const int MsgpackFieldNumber = 1;
    private pb::ByteString msgpack_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Msgpack {
      get { return msgpack_; }
      set {
        msgpack_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "json" field.</summary>
    public const int JsonFieldNumber = 2;
    private pb::ByteString json_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Json {
      get { return json_; }
      set {
        json_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DynamicValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DynamicValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgpack != other.Msgpack) return false;
      if (Json != other.Json) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgpack.Length != 0) hash ^= Msgpack.GetHashCode();
      if (Json.Length != 0) hash ^= Json.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgpack.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Msgpack);
      }
      if (Json.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Json);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgpack.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Msgpack);
      }
      if (Json.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Json);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DynamicValue other) {
      if (other == null) {
        return;
      }
      if (other.Msgpack.Length != 0) {
        Msgpack = other.Msgpack;
      }
      if (other.Json.Length != 0) {
        Json = other.Json;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Msgpack = input.ReadBytes();
            break;
          }
          case 18: {
            Json = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Diagnostic : pb::IMessage<Diagnostic> {
    private static readonly pb::MessageParser<Diagnostic> _parser = new pb::MessageParser<Diagnostic>(() => new Diagnostic());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Diagnostic> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tfplugin5.Tfplugin5Reflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Diagnostic() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Diagnostic(Diagnostic other) : this() {
      severity_ = other.severity_;
      summary_ = other.summary_;
      detail_ = other.detail_;
      attribute_ = other.attribute_ != null ? other.attribute_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Diagnostic Clone() {
      return new Diagnostic(this);
    }

    /// <summary>Field number for the "severity" field.</summary>
    public const int SeverityFieldNumber = 1;
    private global::Tfplugin5.Diagnostic.Types.Severity severity_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tfplugin5.Diagnostic.Types.Severity Severity {
      get { return severity_; }
      set {
        severity_ = value;
      }
    }

    /// <summary>Field number for the "summary" field.</summary>
    public const int SummaryFieldNumber = 2;
    private string summary_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Summary {
      get { return summary_; }
      set {
        summary_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "detail" field.</summary>
    public const int DetailFieldNumber = 3;
    private string detail_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Detail {
      get { return detail_; }
      set {
        detail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "attribute" field.</summary>
    public const int AttributeFieldNumber = 4;
    private global::Tfplugin5.AttributePath attribute_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tfplugin5.AttributePath Attribute {
      get { return attribute_; }
      set {
        attribute_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Diagnostic);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Diagnostic other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Severity != other.Severity) return false;
      if (Summary != other.Summary) return false;
      if (Detail != other.Detail) return false;
      if (!object.Equals(Attribute, other.Attribute)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Severity != 0) hash ^= Severity.GetHashCode();
      if (Summary.Length != 0) hash ^= Summary.GetHashCode();
      if (Detail.Length != 0) hash ^= Detail.GetHashCode();
      if (attribute_ != null) hash ^= Attribute.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Severity != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Severity);
      }
      if (Summary.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Summary);
      }
      if (Detail.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Detail);
      }
      if (attribute_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Attribute);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Severity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Severity);
      }
      if (Summary.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Summary);
      }
      if (Detail.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Detail);
      }
      if (attribute_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Attribute);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Diagnostic other) {
      if (other == null) {
        return;
      }
      if (other.Severity != 0) {
        Severity = other.Severity;
      }
      if (other.Summary.Length != 0) {
        Summary = other.Summary;
      }
      if (other.Detail.Length != 0) {
        Detail = other.Detail;
      }
      if (other.attribute_ != null) {
        if (attribute_ == null) {
          Attribute = new global::Tfplugin5.AttributePath();
        }
        Attribute.MergeFrom(other.Attribute);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Severity = (global::Tfplugin5.Diagnostic.Types.Severity) input.ReadEnum();
            break;
          }
          case 18: {
            Summary = input.ReadString();
            break;
          }
          case 26: {
            Detail = input.ReadString();
            break;
          }
          case 34: {
            if (attribute_ == null) {
              Attribute = new global::Tfplugin5.AttributePath();
            }
            input.ReadMessage(Attribute);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Diagnostic message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Severity {
        [pbr::OriginalName("INVALID")] Invalid = 0,
        [pbr::OriginalName("ERROR")] Error = 1,
        [pbr::OriginalName("WARNING")] Warning = 2,
      }

    }
    #endregion

  }

  public sealed partial class AttributePath : pb::IMessage<AttributePath> {
    private static readonly pb::MessageParser<AttributePath> _parser = new pb::MessageParser<AttributePath>(() => new AttributePath());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AttributePath> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tfplugin5.Tfplugin5Reflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttributePath() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttributePath(AttributePath other) : this() {
      steps_ = other.steps_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttributePath Clone() {
      return new AttributePath(this);
    }

    /// <summary>Field number for the "steps" field.</summary>
    public const int StepsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Tfplugin5.AttributePath.Types.Step> _repeated_steps_codec
        = pb::FieldCodec.ForMessage(10, global::Tfplugin5.AttributePath.Types.Step.Parser);
    private readonly pbc::RepeatedField<global::Tfplugin5.AttributePath.Types.Step> steps_ = new pbc::RepeatedField<global::Tfplugin5.AttributePath.Types.Step>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Tfplugin5.AttributePath.Types.Step> Steps {
      get { return steps_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AttributePath);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AttributePath other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!steps_.Equals(other.steps_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= steps_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      steps_.WriteTo(output, _repeated_steps_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += steps_.CalculateSize(_repeated_steps_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AttributePath other) {
      if (other == null) {
        return;
      }
      steps_.Add(other.steps_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            steps_.AddEntriesFrom(input, _repeated_steps_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the AttributePath message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Step : pb::IMessage<Step> {
        private static readonly pb::MessageParser<Step> _parser = new pb::MessageParser<Step>(() => new Step());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Step> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Tfplugin5.AttributePath.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Step() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Step(Step other) : this() {
          switch (other.SelectorCase) {
            case SelectorOneofCase.AttributeName:
              AttributeName = other.AttributeName;
              break;
            case SelectorOneofCase.ElementKeyString:
              ElementKeyString = other.ElementKeyString;
              break;
            case SelectorOneofCase.ElementKeyInt:
              ElementKeyInt = other.ElementKeyInt;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Step Clone() {
          return new Step(this);
        }

        /// <summary>Field number for the "attribute_name" field.</summary>
        public const int AttributeNameFieldNumber = 1;
        /// <summary>
        /// Set "attribute_name" to represent looking up an attribute
        /// in the current object value.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string AttributeName {
          get { return selectorCase_ == SelectorOneofCase.AttributeName ? (string) selector_ : ""; }
          set {
            selector_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            selectorCase_ = SelectorOneofCase.AttributeName;
          }
        }

        /// <summary>Field number for the "element_key_string" field.</summary>
        public const int ElementKeyStringFieldNumber = 2;
        /// <summary>
        /// Set "element_key_*" to represent looking up an element in
        /// an indexable collection type.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ElementKeyString {
          get { return selectorCase_ == SelectorOneofCase.ElementKeyString ? (string) selector_ : ""; }
          set {
            selector_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            selectorCase_ = SelectorOneofCase.ElementKeyString;
          }
        }

        /// <summary>Field number for the "element_key_int" field.</summary>
        public const int ElementKeyIntFieldNumber = 3;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long ElementKeyInt {
          get { return selectorCase_ == SelectorOneofCase.ElementKeyInt ? (long) selector_ : 0L; }
          set {
            selector_ = value;
            selectorCase_ = SelectorOneofCase.ElementKeyInt;
          }
        }

        private object selector_;
        /// <summary>Enum of possible cases for the "selector" oneof.</summary>
        public enum SelectorOneofCase {
          None = 0,
          AttributeName = 1,
          ElementKeyString = 2,
          ElementKeyInt = 3,
        }
        private SelectorOneofCase selectorCase_ = SelectorOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SelectorOneofCase SelectorCase {
          get { return selectorCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearSelector() {
          selectorCase_ = SelectorOneofCase.None;
          selector_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Step);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Step other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (AttributeName != other.AttributeName) return false;
          if (ElementKeyString != other.ElementKeyString) return false;
          if (ElementKeyInt != other.ElementKeyInt) return false;
          if (SelectorCase != other.SelectorCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (selectorCase_ == SelectorOneofCase.AttributeName) hash ^= AttributeName.GetHashCode();
          if (selectorCase_ == SelectorOneofCase.ElementKeyString) hash ^= ElementKeyString.GetHashCode();
          if (selectorCase_ == SelectorOneofCase.ElementKeyInt) hash ^= ElementKeyInt.GetHashCode();
          hash ^= (int) selectorCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (selectorCase_ == SelectorOneofCase.AttributeName) {
            output.WriteRawTag(10);
            output.WriteString(AttributeName);
          }
          if (selectorCase_ == SelectorOneofCase.ElementKeyString) {
            output.WriteRawTag(18);
            output.WriteString(ElementKeyString);
          }
          if (selectorCase_ == SelectorOneofCase.ElementKeyInt) {
            output.WriteRawTag(24);
            output.WriteInt64(ElementKeyInt);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (selectorCase_ == SelectorOneofCase.AttributeName) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(AttributeName);
          }
          if (selectorCase_ == SelectorOneofCase.ElementKeyString) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ElementKeyString);
          }
          if (selectorCase_ == SelectorOneofCase.ElementKeyInt) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(ElementKeyInt);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Step other) {
          if (other == null) {
            return;
          }
          switch (other.SelectorCase) {
            case SelectorOneofCase.AttributeName:
              AttributeName = other.AttributeName;
              break;
            case SelectorOneofCase.ElementKeyString:
              ElementKeyString = other.ElementKeyString;
              break;
            case SelectorOneofCase.ElementKeyInt:
              ElementKeyInt = other.ElementKeyInt;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                AttributeName = input.ReadString();
                break;
              }
              case 18: {
                ElementKeyString = input.ReadString();
                break;
              }
              case 24: {
                ElementKeyInt = input.ReadInt64();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class Stop : pb::IMessage<Stop> {
    private static readonly pb::MessageParser<Stop> _parser = new pb::MessageParser<Stop>(() => new Stop());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Stop> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tfplugin5.Tfplugin5Reflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Stop() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Stop(Stop other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Stop Clone() {
      return new Stop(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Stop);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Stop other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Stop other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Stop message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Request : pb::IMessage<Request> {
        private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Request> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Tfplugin5.Stop.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request(Request other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request Clone() {
          return new Request(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Request);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Request other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Request other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        }

      }

      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Tfplugin5.Stop.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          error_ = other.error_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        /// <summary>Field number for the "Error" field.</summary>
        public const int ErrorFieldNumber = 1;
        private string error_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Error {
          get { return error_; }
          set {
            error_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Error != other.Error) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Error.Length != 0) hash ^= Error.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Error.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Error);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Error.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Error);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          if (other.Error.Length != 0) {
            Error = other.Error;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Error = input.ReadString();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  /// <summary>
  /// RawState holds the stored state for a resource to be upgraded by the
  /// provider. It can be in one of two formats, the current json encoded format
  /// in bytes, or the legacy flatmap format as a map of strings.
  /// </summary>
  public sealed partial class RawState : pb::IMessage<RawState> {
    private static readonly pb::MessageParser<RawState> _parser = new pb::MessageParser<RawState>(() => new RawState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RawState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tfplugin5.Tfplugin5Reflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RawState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RawState(RawState other) : this() {
      json_ = other.json_;
      flatmap_ = other.flatmap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RawState Clone() {
      return new RawState(this);
    }

    /// <summary>Field number for the "json" field.</summary>
    public const int JsonFieldNumber = 1;
    private pb::ByteString json_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Json {
      get { return json_; }
      set {
        json_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "flatmap" field.</summary>
    public const int FlatmapFieldNumber = 2;
    private static readonly pbc::MapField<string, string>.Codec _map_flatmap_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 18);
    private readonly pbc::MapField<string, string> flatmap_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Flatmap {
      get { return flatmap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RawState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RawState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Json != other.Json) return false;
      if (!Flatmap.Equals(other.Flatmap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Json.Length != 0) hash ^= Json.GetHashCode();
      hash ^= Flatmap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Json.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Json);
      }
      flatmap_.WriteTo(output, _map_flatmap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Json.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Json);
      }
      size += flatmap_.CalculateSize(_map_flatmap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RawState other) {
      if (other == null) {
        return;
      }
      if (other.Json.Length != 0) {
        Json = other.Json;
      }
      flatmap_.Add(other.flatmap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Json = input.ReadBytes();
            break;
          }
          case 18: {
            flatmap_.AddEntriesFrom(input, _map_flatmap_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Schema is the configuration schema for a Resource, Provider, or Provisioner.
  /// </summary>
  public sealed partial class Schema : pb::IMessage<Schema> {
    private static readonly pb::MessageParser<Schema> _parser = new pb::MessageParser<Schema>(() => new Schema());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Schema> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tfplugin5.Tfplugin5Reflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Schema() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Schema(Schema other) : this() {
      version_ = other.version_;
      block_ = other.block_ != null ? other.block_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Schema Clone() {
      return new Schema(this);
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 1;
    private long version_;
    /// <summary>
    /// The version of the schema.
    /// Schemas are versioned, so that providers can upgrade a saved resource
    /// state when the schema is changed. 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    /// <summary>Field number for the "block" field.</summary>
    public const int BlockFieldNumber = 2;
    private global::Tfplugin5.Schema.Types.Block block_;
    /// <summary>
    /// Block is the top level configuration block for this schema.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tfplugin5.Schema.Types.Block Block {
      get { return block_; }
      set {
        block_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Schema);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Schema other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Version != other.Version) return false;
      if (!object.Equals(Block, other.Block)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Version != 0L) hash ^= Version.GetHashCode();
      if (block_ != null) hash ^= Block.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Version != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Version);
      }
      if (block_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Block);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Version != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Version);
      }
      if (block_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Block);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Schema other) {
      if (other == null) {
        return;
      }
      if (other.Version != 0L) {
        Version = other.Version;
      }
      if (other.block_ != null) {
        if (block_ == null) {
          Block = new global::Tfplugin5.Schema.Types.Block();
        }
        Block.MergeFrom(other.Block);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Version = input.ReadInt64();
            break;
          }
          case 18: {
            if (block_ == null) {
              Block = new global::Tfplugin5.Schema.Types.Block();
            }
            input.ReadMessage(Block);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Schema message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Block : pb::IMessage<Block> {
        private static readonly pb::MessageParser<Block> _parser = new pb::MessageParser<Block>(() => new Block());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Block> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Tfplugin5.Schema.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Block() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Block(Block other) : this() {
          version_ = other.version_;
          attributes_ = other.attributes_.Clone();
          blockTypes_ = other.blockTypes_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Block Clone() {
          return new Block(this);
        }

        /// <summary>Field number for the "version" field.</summary>
        public const int VersionFieldNumber = 1;
        private long version_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long Version {
          get { return version_; }
          set {
            version_ = value;
          }
        }

        /// <summary>Field number for the "attributes" field.</summary>
        public const int AttributesFieldNumber = 2;
        private static readonly pb::FieldCodec<global::Tfplugin5.Schema.Types.Attribute> _repeated_attributes_codec
            = pb::FieldCodec.ForMessage(18, global::Tfplugin5.Schema.Types.Attribute.Parser);
        private readonly pbc::RepeatedField<global::Tfplugin5.Schema.Types.Attribute> attributes_ = new pbc::RepeatedField<global::Tfplugin5.Schema.Types.Attribute>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Tfplugin5.Schema.Types.Attribute> Attributes {
          get { return attributes_; }
        }

        /// <summary>Field number for the "block_types" field.</summary>
        public const int BlockTypesFieldNumber = 3;
        private static readonly pb::FieldCodec<global::Tfplugin5.Schema.Types.NestedBlock> _repeated_blockTypes_codec
            = pb::FieldCodec.ForMessage(26, global::Tfplugin5.Schema.Types.NestedBlock.Parser);
        private readonly pbc::RepeatedField<global::Tfplugin5.Schema.Types.NestedBlock> blockTypes_ = new pbc::RepeatedField<global::Tfplugin5.Schema.Types.NestedBlock>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Tfplugin5.Schema.Types.NestedBlock> BlockTypes {
          get { return blockTypes_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Block);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Block other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Version != other.Version) return false;
          if(!attributes_.Equals(other.attributes_)) return false;
          if(!blockTypes_.Equals(other.blockTypes_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Version != 0L) hash ^= Version.GetHashCode();
          hash ^= attributes_.GetHashCode();
          hash ^= blockTypes_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Version != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(Version);
          }
          attributes_.WriteTo(output, _repeated_attributes_codec);
          blockTypes_.WriteTo(output, _repeated_blockTypes_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Version != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(Version);
          }
          size += attributes_.CalculateSize(_repeated_attributes_codec);
          size += blockTypes_.CalculateSize(_repeated_blockTypes_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Block other) {
          if (other == null) {
            return;
          }
          if (other.Version != 0L) {
            Version = other.Version;
          }
          attributes_.Add(other.attributes_);
          blockTypes_.Add(other.blockTypes_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Version = input.ReadInt64();
                break;
              }
              case 18: {
                attributes_.AddEntriesFrom(input, _repeated_attributes_codec);
                break;
              }
              case 26: {
                blockTypes_.AddEntriesFrom(input, _repeated_blockTypes_codec);
                break;
              }
            }
          }
        }

      }

      public sealed partial class Attribute : pb::IMessage<Attribute> {
        private static readonly pb::MessageParser<Attribute> _parser = new pb::MessageParser<Attribute>(() => new Attribute());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Attribute> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Tfplugin5.Schema.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Attribute() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Attribute(Attribute other) : this() {
          name_ = other.name_;
          type_ = other.type_;
          description_ = other.description_;
          required_ = other.required_;
          optional_ = other.optional_;
          computed_ = other.computed_;
          sensitive_ = other.sensitive_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Attribute Clone() {
          return new Attribute(this);
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 1;
        private string name_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "type" field.</summary>
        public const int TypeFieldNumber = 2;
        private pb::ByteString type_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString Type {
          get { return type_; }
          set {
            type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "description" field.</summary>
        public const int DescriptionFieldNumber = 3;
        private string description_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Description {
          get { return description_; }
          set {
            description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "required" field.</summary>
        public const int RequiredFieldNumber = 4;
        private bool required_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Required {
          get { return required_; }
          set {
            required_ = value;
          }
        }

        /// <summary>Field number for the "optional" field.</summary>
        public const int OptionalFieldNumber = 5;
        private bool optional_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Optional {
          get { return optional_; }
          set {
            optional_ = value;
          }
        }

        /// <summary>Field number for the "computed" field.</summary>
        public const int ComputedFieldNumber = 6;
        private bool computed_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Computed {
          get { return computed_; }
          set {
            computed_ = value;
          }
        }

        /// <summary>Field number for the "sensitive" field.</summary>
        public const int SensitiveFieldNumber = 7;
        private bool sensitive_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Sensitive {
          get { return sensitive_; }
          set {
            sensitive_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Attribute);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Attribute other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Name != other.Name) return false;
          if (Type != other.Type) return false;
          if (Description != other.Description) return false;
          if (Required != other.Required) return false;
          if (Optional != other.Optional) return false;
          if (Computed != other.Computed) return false;
          if (Sensitive != other.Sensitive) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (Type.Length != 0) hash ^= Type.GetHashCode();
          if (Description.Length != 0) hash ^= Description.GetHashCode();
          if (Required != false) hash ^= Required.GetHashCode();
          if (Optional != false) hash ^= Optional.GetHashCode();
          if (Computed != false) hash ^= Computed.GetHashCode();
          if (Sensitive != false) hash ^= Sensitive.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Name.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Name);
          }
          if (Type.Length != 0) {
            output.WriteRawTag(18);
            output.WriteBytes(Type);
          }
          if (Description.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Description);
          }
          if (Required != false) {
            output.WriteRawTag(32);
            output.WriteBool(Required);
          }
          if (Optional != false) {
            output.WriteRawTag(40);
            output.WriteBool(Optional);
          }
          if (Computed != false) {
            output.WriteRawTag(48);
            output.WriteBool(Computed);
          }
          if (Sensitive != false) {
            output.WriteRawTag(56);
            output.WriteBool(Sensitive);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (Type.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Type);
          }
          if (Description.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
          }
          if (Required != false) {
            size += 1 + 1;
          }
          if (Optional != false) {
            size += 1 + 1;
          }
          if (Computed != false) {
            size += 1 + 1;
          }
          if (Sensitive != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Attribute other) {
          if (other == null) {
            return;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.Type.Length != 0) {
            Type = other.Type;
          }
          if (other.Description.Length != 0) {
            Description = other.Description;
          }
          if (other.Required != false) {
            Required = other.Required;
          }
          if (other.Optional != false) {
            Optional = other.Optional;
          }
          if (other.Computed != false) {
            Computed = other.Computed;
          }
          if (other.Sensitive != false) {
            Sensitive = other.Sensitive;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Name = input.ReadString();
                break;
              }
              case 18: {
                Type = input.ReadBytes();
                break;
              }
              case 26: {
                Description = input.ReadString();
                break;
              }
              case 32: {
                Required = input.ReadBool();
                break;
              }
              case 40: {
                Optional = input.ReadBool();
                break;
              }
              case 48: {
                Computed = input.ReadBool();
                break;
              }
              case 56: {
                Sensitive = input.ReadBool();
                break;
              }
            }
          }
        }

      }

      public sealed partial class NestedBlock : pb::IMessage<NestedBlock> {
        private static readonly pb::MessageParser<NestedBlock> _parser = new pb::MessageParser<NestedBlock>(() => new NestedBlock());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<NestedBlock> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Tfplugin5.Schema.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NestedBlock() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NestedBlock(NestedBlock other) : this() {
          typeName_ = other.typeName_;
          block_ = other.block_ != null ? other.block_.Clone() : null;
          nesting_ = other.nesting_;
          minItems_ = other.minItems_;
          maxItems_ = other.maxItems_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NestedBlock Clone() {
          return new NestedBlock(this);
        }

        /// <summary>Field number for the "type_name" field.</summary>
        public const int TypeNameFieldNumber = 1;
        private string typeName_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TypeName {
          get { return typeName_; }
          set {
            typeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "block" field.</summary>
        public const int BlockFieldNumber = 2;
        private global::Tfplugin5.Schema.Types.Block block_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Tfplugin5.Schema.Types.Block Block {
          get { return block_; }
          set {
            block_ = value;
          }
        }

        /// <summary>Field number for the "nesting" field.</summary>
        public const int NestingFieldNumber = 3;
        private global::Tfplugin5.Schema.Types.NestedBlock.Types.NestingMode nesting_ = 0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Tfplugin5.Schema.Types.NestedBlock.Types.NestingMode Nesting {
          get { return nesting_; }
          set {
            nesting_ = value;
          }
        }

        /// <summary>Field number for the "min_items" field.</summary>
        public const int MinItemsFieldNumber = 4;
        private long minItems_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long MinItems {
          get { return minItems_; }
          set {
            minItems_ = value;
          }
        }

        /// <summary>Field number for the "max_items" field.</summary>
        public const int MaxItemsFieldNumber = 5;
        private long maxItems_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long MaxItems {
          get { return maxItems_; }
          set {
            maxItems_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as NestedBlock);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(NestedBlock other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (TypeName != other.TypeName) return false;
          if (!object.Equals(Block, other.Block)) return false;
          if (Nesting != other.Nesting) return false;
          if (MinItems != other.MinItems) return false;
          if (MaxItems != other.MaxItems) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (TypeName.Length != 0) hash ^= TypeName.GetHashCode();
          if (block_ != null) hash ^= Block.GetHashCode();
          if (Nesting != 0) hash ^= Nesting.GetHashCode();
          if (MinItems != 0L) hash ^= MinItems.GetHashCode();
          if (MaxItems != 0L) hash ^= MaxItems.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (TypeName.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(TypeName);
          }
          if (block_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Block);
          }
          if (Nesting != 0) {
            output.WriteRawTag(24);
            output.WriteEnum((int) Nesting);
          }
          if (MinItems != 0L) {
            output.WriteRawTag(32);
            output.WriteInt64(MinItems);
          }
          if (MaxItems != 0L) {
            output.WriteRawTag(40);
            output.WriteInt64(MaxItems);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (TypeName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TypeName);
          }
          if (block_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Block);
          }
          if (Nesting != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Nesting);
          }
          if (MinItems != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(MinItems);
          }
          if (MaxItems != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaxItems);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(NestedBlock other) {
          if (other == null) {
            return;
          }
          if (other.TypeName.Length != 0) {
            TypeName = other.TypeName;
          }
          if (other.block_ != null) {
            if (block_ == null) {
              Block = new global::Tfplugin5.Schema.Types.Block();
            }
            Block.MergeFrom(other.Block);
          }
          if (other.Nesting != 0) {
            Nesting = other.Nesting;
          }
          if (other.MinItems != 0L) {
            MinItems = other.MinItems;
          }
          if (other.MaxItems != 0L) {
            MaxItems = other.MaxItems;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                TypeName = input.ReadString();
                break;
              }
              case 18: {
                if (block_ == null) {
                  Block = new global::Tfplugin5.Schema.Types.Block();
                }
                input.ReadMessage(Block);
                break;
              }
              case 24: {
                Nesting = (global::Tfplugin5.Schema.Types.NestedBlock.Types.NestingMode) input.ReadEnum();
                break;
              }
              case 32: {
                MinItems = input.ReadInt64();
                break;
              }
              case 40: {
                MaxItems = input.ReadInt64();
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the NestedBlock message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public enum NestingMode {
            [pbr::OriginalName("INVALID")] Invalid = 0,
            [pbr::OriginalName("SINGLE")] Single = 1,
            [pbr::OriginalName("LIST")] List = 2,
            [pbr::OriginalName("SET")] Set = 3,
            [pbr::OriginalName("MAP")] Map = 4,
          }

        }
        #endregion

      }

    }
    #endregion

  }

  public sealed partial class GetProviderSchema : pb::IMessage<GetProviderSchema> {
    private static readonly pb::MessageParser<GetProviderSchema> _parser = new pb::MessageParser<GetProviderSchema>(() => new GetProviderSchema());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetProviderSchema> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tfplugin5.Tfplugin5Reflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetProviderSchema() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetProviderSchema(GetProviderSchema other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetProviderSchema Clone() {
      return new GetProviderSchema(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetProviderSchema);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetProviderSchema other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetProviderSchema other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the GetProviderSchema message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Request : pb::IMessage<Request> {
        private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Request> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Tfplugin5.GetProviderSchema.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request(Request other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request Clone() {
          return new Request(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Request);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Request other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Request other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        }

      }

      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Tfplugin5.GetProviderSchema.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          provider_ = other.provider_ != null ? other.provider_.Clone() : null;
          resourceSchemas_ = other.resourceSchemas_.Clone();
          dataSourceSchemas_ = other.dataSourceSchemas_.Clone();
          diagnostics_ = other.diagnostics_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        /// <summary>Field number for the "provider" field.</summary>
        public const int ProviderFieldNumber = 1;
        private global::Tfplugin5.Schema provider_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Tfplugin5.Schema Provider {
          get { return provider_; }
          set {
            provider_ = value;
          }
        }

        /// <summary>Field number for the "resource_schemas" field.</summary>
        public const int ResourceSchemasFieldNumber = 2;
        private static readonly pbc::MapField<string, global::Tfplugin5.Schema>.Codec _map_resourceSchemas_codec
            = new pbc::MapField<string, global::Tfplugin5.Schema>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::Tfplugin5.Schema.Parser), 18);
        private readonly pbc::MapField<string, global::Tfplugin5.Schema> resourceSchemas_ = new pbc::MapField<string, global::Tfplugin5.Schema>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::MapField<string, global::Tfplugin5.Schema> ResourceSchemas {
          get { return resourceSchemas_; }
        }

        /// <summary>Field number for the "data_source_schemas" field.</summary>
        public const int DataSourceSchemasFieldNumber = 3;
        private static readonly pbc::MapField<string, global::Tfplugin5.Schema>.Codec _map_dataSourceSchemas_codec
            = new pbc::MapField<string, global::Tfplugin5.Schema>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::Tfplugin5.Schema.Parser), 26);
        private readonly pbc::MapField<string, global::Tfplugin5.Schema> dataSourceSchemas_ = new pbc::MapField<string, global::Tfplugin5.Schema>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::MapField<string, global::Tfplugin5.Schema> DataSourceSchemas {
          get { return dataSourceSchemas_; }
        }

        /// <summary>Field number for the "diagnostics" field.</summary>
        public const int DiagnosticsFieldNumber = 4;
        private static readonly pb::FieldCodec<global::Tfplugin5.Diagnostic> _repeated_diagnostics_codec
            = pb::FieldCodec.ForMessage(34, global::Tfplugin5.Diagnostic.Parser);
        private readonly pbc::RepeatedField<global::Tfplugin5.Diagnostic> diagnostics_ = new pbc::RepeatedField<global::Tfplugin5.Diagnostic>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Tfplugin5.Diagnostic> Diagnostics {
          get { return diagnostics_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Provider, other.Provider)) return false;
          if (!ResourceSchemas.Equals(other.ResourceSchemas)) return false;
          if (!DataSourceSchemas.Equals(other.DataSourceSchemas)) return false;
          if(!diagnostics_.Equals(other.diagnostics_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (provider_ != null) hash ^= Provider.GetHashCode();
          hash ^= ResourceSchemas.GetHashCode();
          hash ^= DataSourceSchemas.GetHashCode();
          hash ^= diagnostics_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (provider_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Provider);
          }
          resourceSchemas_.WriteTo(output, _map_resourceSchemas_codec);
          dataSourceSchemas_.WriteTo(output, _map_dataSourceSchemas_codec);
          diagnostics_.WriteTo(output, _repeated_diagnostics_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (provider_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Provider);
          }
          size += resourceSchemas_.CalculateSize(_map_resourceSchemas_codec);
          size += dataSourceSchemas_.CalculateSize(_map_dataSourceSchemas_codec);
          size += diagnostics_.CalculateSize(_repeated_diagnostics_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          if (other.provider_ != null) {
            if (provider_ == null) {
              Provider = new global::Tfplugin5.Schema();
            }
            Provider.MergeFrom(other.Provider);
          }
          resourceSchemas_.Add(other.resourceSchemas_);
          dataSourceSchemas_.Add(other.dataSourceSchemas_);
          diagnostics_.Add(other.diagnostics_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (provider_ == null) {
                  Provider = new global::Tfplugin5.Schema();
                }
                input.ReadMessage(Provider);
                break;
              }
              case 18: {
                resourceSchemas_.AddEntriesFrom(input, _map_resourceSchemas_codec);
                break;
              }
              case 26: {
                dataSourceSchemas_.AddEntriesFrom(input, _map_dataSourceSchemas_codec);
                break;
              }
              case 34: {
                diagnostics_.AddEntriesFrom(input, _repeated_diagnostics_codec);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class PrepareProviderConfig : pb::IMessage<PrepareProviderConfig> {
    private static readonly pb::MessageParser<PrepareProviderConfig> _parser = new pb::MessageParser<PrepareProviderConfig>(() => new PrepareProviderConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PrepareProviderConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tfplugin5.Tfplugin5Reflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrepareProviderConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrepareProviderConfig(PrepareProviderConfig other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrepareProviderConfig Clone() {
      return new PrepareProviderConfig(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PrepareProviderConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PrepareProviderConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PrepareProviderConfig other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the PrepareProviderConfig message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Request : pb::IMessage<Request> {
        private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Request> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Tfplugin5.PrepareProviderConfig.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request(Request other) : this() {
          config_ = other.config_ != null ? other.config_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request Clone() {
          return new Request(this);
        }

        /// <summary>Field number for the "config" field.</summary>
        public const int ConfigFieldNumber = 1;
        private global::Tfplugin5.DynamicValue config_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Tfplugin5.DynamicValue Config {
          get { return config_; }
          set {
            config_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Request);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Request other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Config, other.Config)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (config_ != null) hash ^= Config.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (config_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Config);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (config_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Request other) {
          if (other == null) {
            return;
          }
          if (other.config_ != null) {
            if (config_ == null) {
              Config = new global::Tfplugin5.DynamicValue();
            }
            Config.MergeFrom(other.Config);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (config_ == null) {
                  Config = new global::Tfplugin5.DynamicValue();
                }
                input.ReadMessage(Config);
                break;
              }
            }
          }
        }

      }

      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Tfplugin5.PrepareProviderConfig.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          preparedConfig_ = other.preparedConfig_ != null ? other.preparedConfig_.Clone() : null;
          diagnostics_ = other.diagnostics_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        /// <summary>Field number for the "prepared_config" field.</summary>
        public const int PreparedConfigFieldNumber = 1;
        private global::Tfplugin5.DynamicValue preparedConfig_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Tfplugin5.DynamicValue PreparedConfig {
          get { return preparedConfig_; }
          set {
            preparedConfig_ = value;
          }
        }

        /// <summary>Field number for the "diagnostics" field.</summary>
        public const int DiagnosticsFieldNumber = 2;
        private static readonly pb::FieldCodec<global::Tfplugin5.Diagnostic> _repeated_diagnostics_codec
            = pb::FieldCodec.ForMessage(18, global::Tfplugin5.Diagnostic.Parser);
        private readonly pbc::RepeatedField<global::Tfplugin5.Diagnostic> diagnostics_ = new pbc::RepeatedField<global::Tfplugin5.Diagnostic>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Tfplugin5.Diagnostic> Diagnostics {
          get { return diagnostics_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(PreparedConfig, other.PreparedConfig)) return false;
          if(!diagnostics_.Equals(other.diagnostics_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (preparedConfig_ != null) hash ^= PreparedConfig.GetHashCode();
          hash ^= diagnostics_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (preparedConfig_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(PreparedConfig);
          }
          diagnostics_.WriteTo(output, _repeated_diagnostics_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (preparedConfig_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(PreparedConfig);
          }
          size += diagnostics_.CalculateSize(_repeated_diagnostics_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          if (other.preparedConfig_ != null) {
            if (preparedConfig_ == null) {
              PreparedConfig = new global::Tfplugin5.DynamicValue();
            }
            PreparedConfig.MergeFrom(other.PreparedConfig);
          }
          diagnostics_.Add(other.diagnostics_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (preparedConfig_ == null) {
                  PreparedConfig = new global::Tfplugin5.DynamicValue();
                }
                input.ReadMessage(PreparedConfig);
                break;
              }
              case 18: {
                diagnostics_.AddEntriesFrom(input, _repeated_diagnostics_codec);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class UpgradeResourceState : pb::IMessage<UpgradeResourceState> {
    private static readonly pb::MessageParser<UpgradeResourceState> _parser = new pb::MessageParser<UpgradeResourceState>(() => new UpgradeResourceState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpgradeResourceState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tfplugin5.Tfplugin5Reflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpgradeResourceState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpgradeResourceState(UpgradeResourceState other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpgradeResourceState Clone() {
      return new UpgradeResourceState(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpgradeResourceState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpgradeResourceState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpgradeResourceState other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the UpgradeResourceState message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Request : pb::IMessage<Request> {
        private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Request> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Tfplugin5.UpgradeResourceState.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request(Request other) : this() {
          typeName_ = other.typeName_;
          version_ = other.version_;
          rawState_ = other.rawState_ != null ? other.rawState_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request Clone() {
          return new Request(this);
        }

        /// <summary>Field number for the "type_name" field.</summary>
        public const int TypeNameFieldNumber = 1;
        private string typeName_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TypeName {
          get { return typeName_; }
          set {
            typeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "version" field.</summary>
        public const int VersionFieldNumber = 2;
        private long version_;
        /// <summary>
        /// version is the schema_version number recorded in the state file
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long Version {
          get { return version_; }
          set {
            version_ = value;
          }
        }

        /// <summary>Field number for the "raw_state" field.</summary>
        public const int RawStateFieldNumber = 3;
        private global::Tfplugin5.RawState rawState_;
        /// <summary>
        /// raw_state is the raw states as stored for the resource.  Core does
        /// not have access to the schema of prior_version, so it's the
        /// provider's responsibility to interpret this value using the
        /// appropriate older schema. The raw_state will be the json encoded
        /// state, or a legacy flat-mapped format.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Tfplugin5.RawState RawState {
          get { return rawState_; }
          set {
            rawState_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Request);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Request other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (TypeName != other.TypeName) return false;
          if (Version != other.Version) return false;
          if (!object.Equals(RawState, other.RawState)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (TypeName.Length != 0) hash ^= TypeName.GetHashCode();
          if (Version != 0L) hash ^= Version.GetHashCode();
          if (rawState_ != null) hash ^= RawState.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (TypeName.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(TypeName);
          }
          if (Version != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(Version);
          }
          if (rawState_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(RawState);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (TypeName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TypeName);
          }
          if (Version != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(Version);
          }
          if (rawState_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(RawState);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Request other) {
          if (other == null) {
            return;
          }
          if (other.TypeName.Length != 0) {
            TypeName = other.TypeName;
          }
          if (other.Version != 0L) {
            Version = other.Version;
          }
          if (other.rawState_ != null) {
            if (rawState_ == null) {
              RawState = new global::Tfplugin5.RawState();
            }
            RawState.MergeFrom(other.RawState);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                TypeName = input.ReadString();
                break;
              }
              case 16: {
                Version = input.ReadInt64();
                break;
              }
              case 26: {
                if (rawState_ == null) {
                  RawState = new global::Tfplugin5.RawState();
                }
                input.ReadMessage(RawState);
                break;
              }
            }
          }
        }

      }

      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Tfplugin5.UpgradeResourceState.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          upgradedState_ = other.upgradedState_ != null ? other.upgradedState_.Clone() : null;
          diagnostics_ = other.diagnostics_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        /// <summary>Field number for the "upgraded_state" field.</summary>
        public const int UpgradedStateFieldNumber = 1;
        private global::Tfplugin5.DynamicValue upgradedState_;
        /// <summary>
        /// new_state is a msgpack-encoded data structure that, when interpreted with
        /// the _current_ schema for this resource type, is functionally equivalent to
        /// that which was given in prior_state_raw.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Tfplugin5.DynamicValue UpgradedState {
          get { return upgradedState_; }
          set {
            upgradedState_ = value;
          }
        }

        /// <summary>Field number for the "diagnostics" field.</summary>
        public const int DiagnosticsFieldNumber = 2;
        private static readonly pb::FieldCodec<global::Tfplugin5.Diagnostic> _repeated_diagnostics_codec
            = pb::FieldCodec.ForMessage(18, global::Tfplugin5.Diagnostic.Parser);
        private readonly pbc::RepeatedField<global::Tfplugin5.Diagnostic> diagnostics_ = new pbc::RepeatedField<global::Tfplugin5.Diagnostic>();
        /// <summary>
        /// diagnostics describes any errors encountered during migration that could not
        /// be safely resolved, and warnings about any possibly-risky assumptions made
        /// in the upgrade process.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Tfplugin5.Diagnostic> Diagnostics {
          get { return diagnostics_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(UpgradedState, other.UpgradedState)) return false;
          if(!diagnostics_.Equals(other.diagnostics_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (upgradedState_ != null) hash ^= UpgradedState.GetHashCode();
          hash ^= diagnostics_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (upgradedState_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(UpgradedState);
          }
          diagnostics_.WriteTo(output, _repeated_diagnostics_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (upgradedState_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpgradedState);
          }
          size += diagnostics_.CalculateSize(_repeated_diagnostics_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          if (other.upgradedState_ != null) {
            if (upgradedState_ == null) {
              UpgradedState = new global::Tfplugin5.DynamicValue();
            }
            UpgradedState.MergeFrom(other.UpgradedState);
          }
          diagnostics_.Add(other.diagnostics_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (upgradedState_ == null) {
                  UpgradedState = new global::Tfplugin5.DynamicValue();
                }
                input.ReadMessage(UpgradedState);
                break;
              }
              case 18: {
                diagnostics_.AddEntriesFrom(input, _repeated_diagnostics_codec);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class ValidateResourceTypeConfig : pb::IMessage<ValidateResourceTypeConfig> {
    private static readonly pb::MessageParser<ValidateResourceTypeConfig> _parser = new pb::MessageParser<ValidateResourceTypeConfig>(() => new ValidateResourceTypeConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ValidateResourceTypeConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tfplugin5.Tfplugin5Reflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ValidateResourceTypeConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ValidateResourceTypeConfig(ValidateResourceTypeConfig other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ValidateResourceTypeConfig Clone() {
      return new ValidateResourceTypeConfig(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ValidateResourceTypeConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ValidateResourceTypeConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ValidateResourceTypeConfig other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ValidateResourceTypeConfig message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Request : pb::IMessage<Request> {
        private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Request> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Tfplugin5.ValidateResourceTypeConfig.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request(Request other) : this() {
          typeName_ = other.typeName_;
          config_ = other.config_ != null ? other.config_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request Clone() {
          return new Request(this);
        }

        /// <summary>Field number for the "type_name" field.</summary>
        public const int TypeNameFieldNumber = 1;
        private string typeName_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TypeName {
          get { return typeName_; }
          set {
            typeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "config" field.</summary>
        public const int ConfigFieldNumber = 2;
        private global::Tfplugin5.DynamicValue config_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Tfplugin5.DynamicValue Config {
          get { return config_; }
          set {
            config_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Request);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Request other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (TypeName != other.TypeName) return false;
          if (!object.Equals(Config, other.Config)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (TypeName.Length != 0) hash ^= TypeName.GetHashCode();
          if (config_ != null) hash ^= Config.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (TypeName.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(TypeName);
          }
          if (config_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Config);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (TypeName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TypeName);
          }
          if (config_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Request other) {
          if (other == null) {
            return;
          }
          if (other.TypeName.Length != 0) {
            TypeName = other.TypeName;
          }
          if (other.config_ != null) {
            if (config_ == null) {
              Config = new global::Tfplugin5.DynamicValue();
            }
            Config.MergeFrom(other.Config);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                TypeName = input.ReadString();
                break;
              }
              case 18: {
                if (config_ == null) {
                  Config = new global::Tfplugin5.DynamicValue();
                }
                input.ReadMessage(Config);
                break;
              }
            }
          }
        }

      }

      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Tfplugin5.ValidateResourceTypeConfig.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          diagnostics_ = other.diagnostics_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        /// <summary>Field number for the "diagnostics" field.</summary>
        public const int DiagnosticsFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Tfplugin5.Diagnostic> _repeated_diagnostics_codec
            = pb::FieldCodec.ForMessage(10, global::Tfplugin5.Diagnostic.Parser);
        private readonly pbc::RepeatedField<global::Tfplugin5.Diagnostic> diagnostics_ = new pbc::RepeatedField<global::Tfplugin5.Diagnostic>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Tfplugin5.Diagnostic> Diagnostics {
          get { return diagnostics_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!diagnostics_.Equals(other.diagnostics_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= diagnostics_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          diagnostics_.WriteTo(output, _repeated_diagnostics_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += diagnostics_.CalculateSize(_repeated_diagnostics_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          diagnostics_.Add(other.diagnostics_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                diagnostics_.AddEntriesFrom(input, _repeated_diagnostics_codec);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class ValidateDataSourceConfig : pb::IMessage<ValidateDataSourceConfig> {
    private static readonly pb::MessageParser<ValidateDataSourceConfig> _parser = new pb::MessageParser<ValidateDataSourceConfig>(() => new ValidateDataSourceConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ValidateDataSourceConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tfplugin5.Tfplugin5Reflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ValidateDataSourceConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ValidateDataSourceConfig(ValidateDataSourceConfig other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ValidateDataSourceConfig Clone() {
      return new ValidateDataSourceConfig(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ValidateDataSourceConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ValidateDataSourceConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ValidateDataSourceConfig other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ValidateDataSourceConfig message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Request : pb::IMessage<Request> {
        private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Request> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Tfplugin5.ValidateDataSourceConfig.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request(Request other) : this() {
          typeName_ = other.typeName_;
          config_ = other.config_ != null ? other.config_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request Clone() {
          return new Request(this);
        }

        /// <summary>Field number for the "type_name" field.</summary>
        public const int TypeNameFieldNumber = 1;
        private string typeName_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TypeName {
          get { return typeName_; }
          set {
            typeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "config" field.</summary>
        public const int ConfigFieldNumber = 2;
        private global::Tfplugin5.DynamicValue config_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Tfplugin5.DynamicValue Config {
          get { return config_; }
          set {
            config_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Request);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Request other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (TypeName != other.TypeName) return false;
          if (!object.Equals(Config, other.Config)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (TypeName.Length != 0) hash ^= TypeName.GetHashCode();
          if (config_ != null) hash ^= Config.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (TypeName.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(TypeName);
          }
          if (config_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Config);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (TypeName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TypeName);
          }
          if (config_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Request other) {
          if (other == null) {
            return;
          }
          if (other.TypeName.Length != 0) {
            TypeName = other.TypeName;
          }
          if (other.config_ != null) {
            if (config_ == null) {
              Config = new global::Tfplugin5.DynamicValue();
            }
            Config.MergeFrom(other.Config);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                TypeName = input.ReadString();
                break;
              }
              case 18: {
                if (config_ == null) {
                  Config = new global::Tfplugin5.DynamicValue();
                }
                input.ReadMessage(Config);
                break;
              }
            }
          }
        }

      }

      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Tfplugin5.ValidateDataSourceConfig.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          diagnostics_ = other.diagnostics_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        /// <summary>Field number for the "diagnostics" field.</summary>
        public const int DiagnosticsFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Tfplugin5.Diagnostic> _repeated_diagnostics_codec
            = pb::FieldCodec.ForMessage(10, global::Tfplugin5.Diagnostic.Parser);
        private readonly pbc::RepeatedField<global::Tfplugin5.Diagnostic> diagnostics_ = new pbc::RepeatedField<global::Tfplugin5.Diagnostic>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Tfplugin5.Diagnostic> Diagnostics {
          get { return diagnostics_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!diagnostics_.Equals(other.diagnostics_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= diagnostics_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          diagnostics_.WriteTo(output, _repeated_diagnostics_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += diagnostics_.CalculateSize(_repeated_diagnostics_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          diagnostics_.Add(other.diagnostics_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                diagnostics_.AddEntriesFrom(input, _repeated_diagnostics_codec);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class Configure : pb::IMessage<Configure> {
    private static readonly pb::MessageParser<Configure> _parser = new pb::MessageParser<Configure>(() => new Configure());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Configure> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tfplugin5.Tfplugin5Reflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Configure() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Configure(Configure other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Configure Clone() {
      return new Configure(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Configure);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Configure other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Configure other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Configure message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Request : pb::IMessage<Request> {
        private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Request> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Tfplugin5.Configure.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request(Request other) : this() {
          terraformVersion_ = other.terraformVersion_;
          config_ = other.config_ != null ? other.config_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request Clone() {
          return new Request(this);
        }

        /// <summary>Field number for the "terraform_version" field.</summary>
        public const int TerraformVersionFieldNumber = 1;
        private string terraformVersion_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TerraformVersion {
          get { return terraformVersion_; }
          set {
            terraformVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "config" field.</summary>
        public const int ConfigFieldNumber = 2;
        private global::Tfplugin5.DynamicValue config_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Tfplugin5.DynamicValue Config {
          get { return config_; }
          set {
            config_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Request);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Request other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (TerraformVersion != other.TerraformVersion) return false;
          if (!object.Equals(Config, other.Config)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (TerraformVersion.Length != 0) hash ^= TerraformVersion.GetHashCode();
          if (config_ != null) hash ^= Config.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (TerraformVersion.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(TerraformVersion);
          }
          if (config_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Config);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (TerraformVersion.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TerraformVersion);
          }
          if (config_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Request other) {
          if (other == null) {
            return;
          }
          if (other.TerraformVersion.Length != 0) {
            TerraformVersion = other.TerraformVersion;
          }
          if (other.config_ != null) {
            if (config_ == null) {
              Config = new global::Tfplugin5.DynamicValue();
            }
            Config.MergeFrom(other.Config);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                TerraformVersion = input.ReadString();
                break;
              }
              case 18: {
                if (config_ == null) {
                  Config = new global::Tfplugin5.DynamicValue();
                }
                input.ReadMessage(Config);
                break;
              }
            }
          }
        }

      }

      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Tfplugin5.Configure.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          diagnostics_ = other.diagnostics_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        /// <summary>Field number for the "diagnostics" field.</summary>
        public const int DiagnosticsFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Tfplugin5.Diagnostic> _repeated_diagnostics_codec
            = pb::FieldCodec.ForMessage(10, global::Tfplugin5.Diagnostic.Parser);
        private readonly pbc::RepeatedField<global::Tfplugin5.Diagnostic> diagnostics_ = new pbc::RepeatedField<global::Tfplugin5.Diagnostic>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Tfplugin5.Diagnostic> Diagnostics {
          get { return diagnostics_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!diagnostics_.Equals(other.diagnostics_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= diagnostics_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          diagnostics_.WriteTo(output, _repeated_diagnostics_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += diagnostics_.CalculateSize(_repeated_diagnostics_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          diagnostics_.Add(other.diagnostics_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                diagnostics_.AddEntriesFrom(input, _repeated_diagnostics_codec);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class ReadResource : pb::IMessage<ReadResource> {
    private static readonly pb::MessageParser<ReadResource> _parser = new pb::MessageParser<ReadResource>(() => new ReadResource());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReadResource> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tfplugin5.Tfplugin5Reflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadResource() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadResource(ReadResource other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadResource Clone() {
      return new ReadResource(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReadResource);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReadResource other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReadResource other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ReadResource message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Request : pb::IMessage<Request> {
        private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Request> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Tfplugin5.ReadResource.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request(Request other) : this() {
          typeName_ = other.typeName_;
          currentState_ = other.currentState_ != null ? other.currentState_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request Clone() {
          return new Request(this);
        }

        /// <summary>Field number for the "type_name" field.</summary>
        public const int TypeNameFieldNumber = 1;
        private string typeName_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TypeName {
          get { return typeName_; }
          set {
            typeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "current_state" field.</summary>
        public const int CurrentStateFieldNumber = 2;
        private global::Tfplugin5.DynamicValue currentState_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Tfplugin5.DynamicValue CurrentState {
          get { return currentState_; }
          set {
            currentState_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Request);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Request other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (TypeName != other.TypeName) return false;
          if (!object.Equals(CurrentState, other.CurrentState)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (TypeName.Length != 0) hash ^= TypeName.GetHashCode();
          if (currentState_ != null) hash ^= CurrentState.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (TypeName.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(TypeName);
          }
          if (currentState_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(CurrentState);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (TypeName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TypeName);
          }
          if (currentState_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(CurrentState);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Request other) {
          if (other == null) {
            return;
          }
          if (other.TypeName.Length != 0) {
            TypeName = other.TypeName;
          }
          if (other.currentState_ != null) {
            if (currentState_ == null) {
              CurrentState = new global::Tfplugin5.DynamicValue();
            }
            CurrentState.MergeFrom(other.CurrentState);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                TypeName = input.ReadString();
                break;
              }
              case 18: {
                if (currentState_ == null) {
                  CurrentState = new global::Tfplugin5.DynamicValue();
                }
                input.ReadMessage(CurrentState);
                break;
              }
            }
          }
        }

      }

      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Tfplugin5.ReadResource.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          newState_ = other.newState_ != null ? other.newState_.Clone() : null;
          diagnostics_ = other.diagnostics_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        /// <summary>Field number for the "new_state" field.</summary>
        public const int NewStateFieldNumber = 1;
        private global::Tfplugin5.DynamicValue newState_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Tfplugin5.DynamicValue NewState {
          get { return newState_; }
          set {
            newState_ = value;
          }
        }

        /// <summary>Field number for the "diagnostics" field.</summary>
        public const int DiagnosticsFieldNumber = 2;
        private static readonly pb::FieldCodec<global::Tfplugin5.Diagnostic> _repeated_diagnostics_codec
            = pb::FieldCodec.ForMessage(18, global::Tfplugin5.Diagnostic.Parser);
        private readonly pbc::RepeatedField<global::Tfplugin5.Diagnostic> diagnostics_ = new pbc::RepeatedField<global::Tfplugin5.Diagnostic>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Tfplugin5.Diagnostic> Diagnostics {
          get { return diagnostics_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(NewState, other.NewState)) return false;
          if(!diagnostics_.Equals(other.diagnostics_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (newState_ != null) hash ^= NewState.GetHashCode();
          hash ^= diagnostics_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (newState_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(NewState);
          }
          diagnostics_.WriteTo(output, _repeated_diagnostics_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (newState_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(NewState);
          }
          size += diagnostics_.CalculateSize(_repeated_diagnostics_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          if (other.newState_ != null) {
            if (newState_ == null) {
              NewState = new global::Tfplugin5.DynamicValue();
            }
            NewState.MergeFrom(other.NewState);
          }
          diagnostics_.Add(other.diagnostics_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (newState_ == null) {
                  NewState = new global::Tfplugin5.DynamicValue();
                }
                input.ReadMessage(NewState);
                break;
              }
              case 18: {
                diagnostics_.AddEntriesFrom(input, _repeated_diagnostics_codec);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class PlanResourceChange : pb::IMessage<PlanResourceChange> {
    private static readonly pb::MessageParser<PlanResourceChange> _parser = new pb::MessageParser<PlanResourceChange>(() => new PlanResourceChange());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlanResourceChange> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tfplugin5.Tfplugin5Reflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlanResourceChange() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlanResourceChange(PlanResourceChange other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlanResourceChange Clone() {
      return new PlanResourceChange(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlanResourceChange);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlanResourceChange other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlanResourceChange other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the PlanResourceChange message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Request : pb::IMessage<Request> {
        private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Request> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Tfplugin5.PlanResourceChange.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request(Request other) : this() {
          typeName_ = other.typeName_;
          priorState_ = other.priorState_ != null ? other.priorState_.Clone() : null;
          proposedNewState_ = other.proposedNewState_ != null ? other.proposedNewState_.Clone() : null;
          config_ = other.config_ != null ? other.config_.Clone() : null;
          priorPrivate_ = other.priorPrivate_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request Clone() {
          return new Request(this);
        }

        /// <summary>Field number for the "type_name" field.</summary>
        public const int TypeNameFieldNumber = 1;
        private string typeName_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TypeName {
          get { return typeName_; }
          set {
            typeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "prior_state" field.</summary>
        public const int PriorStateFieldNumber = 2;
        private global::Tfplugin5.DynamicValue priorState_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Tfplugin5.DynamicValue PriorState {
          get { return priorState_; }
          set {
            priorState_ = value;
          }
        }

        /// <summary>Field number for the "proposed_new_state" field.</summary>
        public const int ProposedNewStateFieldNumber = 3;
        private global::Tfplugin5.DynamicValue proposedNewState_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Tfplugin5.DynamicValue ProposedNewState {
          get { return proposedNewState_; }
          set {
            proposedNewState_ = value;
          }
        }

        /// <summary>Field number for the "config" field.</summary>
        public const int ConfigFieldNumber = 4;
        private global::Tfplugin5.DynamicValue config_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Tfplugin5.DynamicValue Config {
          get { return config_; }
          set {
            config_ = value;
          }
        }

        /// <summary>Field number for the "prior_private" field.</summary>
        public const int PriorPrivateFieldNumber = 5;
        private pb::ByteString priorPrivate_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString PriorPrivate {
          get { return priorPrivate_; }
          set {
            priorPrivate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Request);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Request other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (TypeName != other.TypeName) return false;
          if (!object.Equals(PriorState, other.PriorState)) return false;
          if (!object.Equals(ProposedNewState, other.ProposedNewState)) return false;
          if (!object.Equals(Config, other.Config)) return false;
          if (PriorPrivate != other.PriorPrivate) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (TypeName.Length != 0) hash ^= TypeName.GetHashCode();
          if (priorState_ != null) hash ^= PriorState.GetHashCode();
          if (proposedNewState_ != null) hash ^= ProposedNewState.GetHashCode();
          if (config_ != null) hash ^= Config.GetHashCode();
          if (PriorPrivate.Length != 0) hash ^= PriorPrivate.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (TypeName.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(TypeName);
          }
          if (priorState_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(PriorState);
          }
          if (proposedNewState_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(ProposedNewState);
          }
          if (config_ != null) {
            output.WriteRawTag(34);
            output.WriteMessage(Config);
          }
          if (PriorPrivate.Length != 0) {
            output.WriteRawTag(42);
            output.WriteBytes(PriorPrivate);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (TypeName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TypeName);
          }
          if (priorState_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(PriorState);
          }
          if (proposedNewState_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProposedNewState);
          }
          if (config_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
          }
          if (PriorPrivate.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(PriorPrivate);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Request other) {
          if (other == null) {
            return;
          }
          if (other.TypeName.Length != 0) {
            TypeName = other.TypeName;
          }
          if (other.priorState_ != null) {
            if (priorState_ == null) {
              PriorState = new global::Tfplugin5.DynamicValue();
            }
            PriorState.MergeFrom(other.PriorState);
          }
          if (other.proposedNewState_ != null) {
            if (proposedNewState_ == null) {
              ProposedNewState = new global::Tfplugin5.DynamicValue();
            }
            ProposedNewState.MergeFrom(other.ProposedNewState);
          }
          if (other.config_ != null) {
            if (config_ == null) {
              Config = new global::Tfplugin5.DynamicValue();
            }
            Config.MergeFrom(other.Config);
          }
          if (other.PriorPrivate.Length != 0) {
            PriorPrivate = other.PriorPrivate;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                TypeName = input.ReadString();
                break;
              }
              case 18: {
                if (priorState_ == null) {
                  PriorState = new global::Tfplugin5.DynamicValue();
                }
                input.ReadMessage(PriorState);
                break;
              }
              case 26: {
                if (proposedNewState_ == null) {
                  ProposedNewState = new global::Tfplugin5.DynamicValue();
                }
                input.ReadMessage(ProposedNewState);
                break;
              }
              case 34: {
                if (config_ == null) {
                  Config = new global::Tfplugin5.DynamicValue();
                }
                input.ReadMessage(Config);
                break;
              }
              case 42: {
                PriorPrivate = input.ReadBytes();
                break;
              }
            }
          }
        }

      }

      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Tfplugin5.PlanResourceChange.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          plannedState_ = other.plannedState_ != null ? other.plannedState_.Clone() : null;
          requiresReplace_ = other.requiresReplace_.Clone();
          plannedPrivate_ = other.plannedPrivate_;
          diagnostics_ = other.diagnostics_.Clone();
          legacyTypeSystem_ = other.legacyTypeSystem_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        /// <summary>Field number for the "planned_state" field.</summary>
        public const int PlannedStateFieldNumber = 1;
        private global::Tfplugin5.DynamicValue plannedState_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Tfplugin5.DynamicValue PlannedState {
          get { return plannedState_; }
          set {
            plannedState_ = value;
          }
        }

        /// <summary>Field number for the "requires_replace" field.</summary>
        public const int RequiresReplaceFieldNumber = 2;
        private static readonly pb::FieldCodec<global::Tfplugin5.AttributePath> _repeated_requiresReplace_codec
            = pb::FieldCodec.ForMessage(18, global::Tfplugin5.AttributePath.Parser);
        private readonly pbc::RepeatedField<global::Tfplugin5.AttributePath> requiresReplace_ = new pbc::RepeatedField<global::Tfplugin5.AttributePath>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Tfplugin5.AttributePath> RequiresReplace {
          get { return requiresReplace_; }
        }

        /// <summary>Field number for the "planned_private" field.</summary>
        public const int PlannedPrivateFieldNumber = 3;
        private pb::ByteString plannedPrivate_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString PlannedPrivate {
          get { return plannedPrivate_; }
          set {
            plannedPrivate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "diagnostics" field.</summary>
        public const int DiagnosticsFieldNumber = 4;
        private static readonly pb::FieldCodec<global::Tfplugin5.Diagnostic> _repeated_diagnostics_codec
            = pb::FieldCodec.ForMessage(34, global::Tfplugin5.Diagnostic.Parser);
        private readonly pbc::RepeatedField<global::Tfplugin5.Diagnostic> diagnostics_ = new pbc::RepeatedField<global::Tfplugin5.Diagnostic>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Tfplugin5.Diagnostic> Diagnostics {
          get { return diagnostics_; }
        }

        /// <summary>Field number for the "legacy_type_system" field.</summary>
        public const int LegacyTypeSystemFieldNumber = 5;
        private bool legacyTypeSystem_;
        /// <summary>
        /// This may be set only by the helper/schema "SDK" in the main Terraform
        /// repository, to request that Terraform Core >=0.12 permit additional
        /// inconsistencies that can result from the legacy SDK type system
        /// and its imprecise mapping to the >=0.12 type system.
        /// The change in behavior implied by this flag makes sense only for the
        /// specific details of the legacy SDK type system, and are not a general
        /// mechanism to avoid proper type handling in providers.
        ///
        ///     ====              DO NOT USE THIS              ====
        ///     ==== THIS MUST BE LEFT UNSET IN ALL OTHER SDKS ====
        ///     ====              DO NOT USE THIS              ====
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool LegacyTypeSystem {
          get { return legacyTypeSystem_; }
          set {
            legacyTypeSystem_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(PlannedState, other.PlannedState)) return false;
          if(!requiresReplace_.Equals(other.requiresReplace_)) return false;
          if (PlannedPrivate != other.PlannedPrivate) return false;
          if(!diagnostics_.Equals(other.diagnostics_)) return false;
          if (LegacyTypeSystem != other.LegacyTypeSystem) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (plannedState_ != null) hash ^= PlannedState.GetHashCode();
          hash ^= requiresReplace_.GetHashCode();
          if (PlannedPrivate.Length != 0) hash ^= PlannedPrivate.GetHashCode();
          hash ^= diagnostics_.GetHashCode();
          if (LegacyTypeSystem != false) hash ^= LegacyTypeSystem.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (plannedState_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(PlannedState);
          }
          requiresReplace_.WriteTo(output, _repeated_requiresReplace_codec);
          if (PlannedPrivate.Length != 0) {
            output.WriteRawTag(26);
            output.WriteBytes(PlannedPrivate);
          }
          diagnostics_.WriteTo(output, _repeated_diagnostics_codec);
          if (LegacyTypeSystem != false) {
            output.WriteRawTag(40);
            output.WriteBool(LegacyTypeSystem);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (plannedState_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlannedState);
          }
          size += requiresReplace_.CalculateSize(_repeated_requiresReplace_codec);
          if (PlannedPrivate.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(PlannedPrivate);
          }
          size += diagnostics_.CalculateSize(_repeated_diagnostics_codec);
          if (LegacyTypeSystem != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          if (other.plannedState_ != null) {
            if (plannedState_ == null) {
              PlannedState = new global::Tfplugin5.DynamicValue();
            }
            PlannedState.MergeFrom(other.PlannedState);
          }
          requiresReplace_.Add(other.requiresReplace_);
          if (other.PlannedPrivate.Length != 0) {
            PlannedPrivate = other.PlannedPrivate;
          }
          diagnostics_.Add(other.diagnostics_);
          if (other.LegacyTypeSystem != false) {
            LegacyTypeSystem = other.LegacyTypeSystem;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (plannedState_ == null) {
                  PlannedState = new global::Tfplugin5.DynamicValue();
                }
                input.ReadMessage(PlannedState);
                break;
              }
              case 18: {
                requiresReplace_.AddEntriesFrom(input, _repeated_requiresReplace_codec);
                break;
              }
              case 26: {
                PlannedPrivate = input.ReadBytes();
                break;
              }
              case 34: {
                diagnostics_.AddEntriesFrom(input, _repeated_diagnostics_codec);
                break;
              }
              case 40: {
                LegacyTypeSystem = input.ReadBool();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class ApplyResourceChange : pb::IMessage<ApplyResourceChange> {
    private static readonly pb::MessageParser<ApplyResourceChange> _parser = new pb::MessageParser<ApplyResourceChange>(() => new ApplyResourceChange());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ApplyResourceChange> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tfplugin5.Tfplugin5Reflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApplyResourceChange() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApplyResourceChange(ApplyResourceChange other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApplyResourceChange Clone() {
      return new ApplyResourceChange(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ApplyResourceChange);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ApplyResourceChange other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ApplyResourceChange other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ApplyResourceChange message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Request : pb::IMessage<Request> {
        private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Request> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Tfplugin5.ApplyResourceChange.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request(Request other) : this() {
          typeName_ = other.typeName_;
          priorState_ = other.priorState_ != null ? other.priorState_.Clone() : null;
          plannedState_ = other.plannedState_ != null ? other.plannedState_.Clone() : null;
          config_ = other.config_ != null ? other.config_.Clone() : null;
          plannedPrivate_ = other.plannedPrivate_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request Clone() {
          return new Request(this);
        }

        /// <summary>Field number for the "type_name" field.</summary>
        public const int TypeNameFieldNumber = 1;
        private string typeName_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TypeName {
          get { return typeName_; }
          set {
            typeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "prior_state" field.</summary>
        public const int PriorStateFieldNumber = 2;
        private global::Tfplugin5.DynamicValue priorState_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Tfplugin5.DynamicValue PriorState {
          get { return priorState_; }
          set {
            priorState_ = value;
          }
        }

        /// <summary>Field number for the "planned_state" field.</summary>
        public const int PlannedStateFieldNumber = 3;
        private global::Tfplugin5.DynamicValue plannedState_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Tfplugin5.DynamicValue PlannedState {
          get { return plannedState_; }
          set {
            plannedState_ = value;
          }
        }

        /// <summary>Field number for the "config" field.</summary>
        public const int ConfigFieldNumber = 4;
        private global::Tfplugin5.DynamicValue config_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Tfplugin5.DynamicValue Config {
          get { return config_; }
          set {
            config_ = value;
          }
        }

        /// <summary>Field number for the "planned_private" field.</summary>
        public const int PlannedPrivateFieldNumber = 5;
        private pb::ByteString plannedPrivate_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString PlannedPrivate {
          get { return plannedPrivate_; }
          set {
            plannedPrivate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Request);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Request other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (TypeName != other.TypeName) return false;
          if (!object.Equals(PriorState, other.PriorState)) return false;
          if (!object.Equals(PlannedState, other.PlannedState)) return false;
          if (!object.Equals(Config, other.Config)) return false;
          if (PlannedPrivate != other.PlannedPrivate) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (TypeName.Length != 0) hash ^= TypeName.GetHashCode();
          if (priorState_ != null) hash ^= PriorState.GetHashCode();
          if (plannedState_ != null) hash ^= PlannedState.GetHashCode();
          if (config_ != null) hash ^= Config.GetHashCode();
          if (PlannedPrivate.Length != 0) hash ^= PlannedPrivate.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (TypeName.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(TypeName);
          }
          if (priorState_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(PriorState);
          }
          if (plannedState_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(PlannedState);
          }
          if (config_ != null) {
            output.WriteRawTag(34);
            output.WriteMessage(Config);
          }
          if (PlannedPrivate.Length != 0) {
            output.WriteRawTag(42);
            output.WriteBytes(PlannedPrivate);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (TypeName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TypeName);
          }
          if (priorState_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(PriorState);
          }
          if (plannedState_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlannedState);
          }
          if (config_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
          }
          if (PlannedPrivate.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(PlannedPrivate);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Request other) {
          if (other == null) {
            return;
          }
          if (other.TypeName.Length != 0) {
            TypeName = other.TypeName;
          }
          if (other.priorState_ != null) {
            if (priorState_ == null) {
              PriorState = new global::Tfplugin5.DynamicValue();
            }
            PriorState.MergeFrom(other.PriorState);
          }
          if (other.plannedState_ != null) {
            if (plannedState_ == null) {
              PlannedState = new global::Tfplugin5.DynamicValue();
            }
            PlannedState.MergeFrom(other.PlannedState);
          }
          if (other.config_ != null) {
            if (config_ == null) {
              Config = new global::Tfplugin5.DynamicValue();
            }
            Config.MergeFrom(other.Config);
          }
          if (other.PlannedPrivate.Length != 0) {
            PlannedPrivate = other.PlannedPrivate;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                TypeName = input.ReadString();
                break;
              }
              case 18: {
                if (priorState_ == null) {
                  PriorState = new global::Tfplugin5.DynamicValue();
                }
                input.ReadMessage(PriorState);
                break;
              }
              case 26: {
                if (plannedState_ == null) {
                  PlannedState = new global::Tfplugin5.DynamicValue();
                }
                input.ReadMessage(PlannedState);
                break;
              }
              case 34: {
                if (config_ == null) {
                  Config = new global::Tfplugin5.DynamicValue();
                }
                input.ReadMessage(Config);
                break;
              }
              case 42: {
                PlannedPrivate = input.ReadBytes();
                break;
              }
            }
          }
        }

      }

      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Tfplugin5.ApplyResourceChange.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          newState_ = other.newState_ != null ? other.newState_.Clone() : null;
          private_ = other.private_;
          diagnostics_ = other.diagnostics_.Clone();
          legacyTypeSystem_ = other.legacyTypeSystem_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        /// <summary>Field number for the "new_state" field.</summary>
        public const int NewStateFieldNumber = 1;
        private global::Tfplugin5.DynamicValue newState_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Tfplugin5.DynamicValue NewState {
          get { return newState_; }
          set {
            newState_ = value;
          }
        }

        /// <summary>Field number for the "private" field.</summary>
        public const int PrivateFieldNumber = 2;
        private pb::ByteString private_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString Private {
          get { return private_; }
          set {
            private_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "diagnostics" field.</summary>
        public const int DiagnosticsFieldNumber = 3;
        private static readonly pb::FieldCodec<global::Tfplugin5.Diagnostic> _repeated_diagnostics_codec
            = pb::FieldCodec.ForMessage(26, global::Tfplugin5.Diagnostic.Parser);
        private readonly pbc::RepeatedField<global::Tfplugin5.Diagnostic> diagnostics_ = new pbc::RepeatedField<global::Tfplugin5.Diagnostic>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Tfplugin5.Diagnostic> Diagnostics {
          get { return diagnostics_; }
        }

        /// <summary>Field number for the "legacy_type_system" field.</summary>
        public const int LegacyTypeSystemFieldNumber = 4;
        private bool legacyTypeSystem_;
        /// <summary>
        /// This may be set only by the helper/schema "SDK" in the main Terraform
        /// repository, to request that Terraform Core >=0.12 permit additional
        /// inconsistencies that can result from the legacy SDK type system
        /// and its imprecise mapping to the >=0.12 type system.
        /// The change in behavior implied by this flag makes sense only for the
        /// specific details of the legacy SDK type system, and are not a general
        /// mechanism to avoid proper type handling in providers.
        ///
        ///     ====              DO NOT USE THIS              ====
        ///     ==== THIS MUST BE LEFT UNSET IN ALL OTHER SDKS ====
        ///     ====              DO NOT USE THIS              ====
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool LegacyTypeSystem {
          get { return legacyTypeSystem_; }
          set {
            legacyTypeSystem_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(NewState, other.NewState)) return false;
          if (Private != other.Private) return false;
          if(!diagnostics_.Equals(other.diagnostics_)) return false;
          if (LegacyTypeSystem != other.LegacyTypeSystem) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (newState_ != null) hash ^= NewState.GetHashCode();
          if (Private.Length != 0) hash ^= Private.GetHashCode();
          hash ^= diagnostics_.GetHashCode();
          if (LegacyTypeSystem != false) hash ^= LegacyTypeSystem.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (newState_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(NewState);
          }
          if (Private.Length != 0) {
            output.WriteRawTag(18);
            output.WriteBytes(Private);
          }
          diagnostics_.WriteTo(output, _repeated_diagnostics_codec);
          if (LegacyTypeSystem != false) {
            output.WriteRawTag(32);
            output.WriteBool(LegacyTypeSystem);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (newState_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(NewState);
          }
          if (Private.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Private);
          }
          size += diagnostics_.CalculateSize(_repeated_diagnostics_codec);
          if (LegacyTypeSystem != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          if (other.newState_ != null) {
            if (newState_ == null) {
              NewState = new global::Tfplugin5.DynamicValue();
            }
            NewState.MergeFrom(other.NewState);
          }
          if (other.Private.Length != 0) {
            Private = other.Private;
          }
          diagnostics_.Add(other.diagnostics_);
          if (other.LegacyTypeSystem != false) {
            LegacyTypeSystem = other.LegacyTypeSystem;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (newState_ == null) {
                  NewState = new global::Tfplugin5.DynamicValue();
                }
                input.ReadMessage(NewState);
                break;
              }
              case 18: {
                Private = input.ReadBytes();
                break;
              }
              case 26: {
                diagnostics_.AddEntriesFrom(input, _repeated_diagnostics_codec);
                break;
              }
              case 32: {
                LegacyTypeSystem = input.ReadBool();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class ImportResourceState : pb::IMessage<ImportResourceState> {
    private static readonly pb::MessageParser<ImportResourceState> _parser = new pb::MessageParser<ImportResourceState>(() => new ImportResourceState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImportResourceState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tfplugin5.Tfplugin5Reflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImportResourceState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImportResourceState(ImportResourceState other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImportResourceState Clone() {
      return new ImportResourceState(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImportResourceState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImportResourceState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImportResourceState other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ImportResourceState message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Request : pb::IMessage<Request> {
        private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Request> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Tfplugin5.ImportResourceState.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request(Request other) : this() {
          typeName_ = other.typeName_;
          id_ = other.id_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request Clone() {
          return new Request(this);
        }

        /// <summary>Field number for the "type_name" field.</summary>
        public const int TypeNameFieldNumber = 1;
        private string typeName_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TypeName {
          get { return typeName_; }
          set {
            typeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 2;
        private string id_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Id {
          get { return id_; }
          set {
            id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Request);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Request other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (TypeName != other.TypeName) return false;
          if (Id != other.Id) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (TypeName.Length != 0) hash ^= TypeName.GetHashCode();
          if (Id.Length != 0) hash ^= Id.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (TypeName.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(TypeName);
          }
          if (Id.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Id);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (TypeName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TypeName);
          }
          if (Id.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Request other) {
          if (other == null) {
            return;
          }
          if (other.TypeName.Length != 0) {
            TypeName = other.TypeName;
          }
          if (other.Id.Length != 0) {
            Id = other.Id;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                TypeName = input.ReadString();
                break;
              }
              case 18: {
                Id = input.ReadString();
                break;
              }
            }
          }
        }

      }

      public sealed partial class ImportedResource : pb::IMessage<ImportedResource> {
        private static readonly pb::MessageParser<ImportedResource> _parser = new pb::MessageParser<ImportedResource>(() => new ImportedResource());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ImportedResource> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Tfplugin5.ImportResourceState.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ImportedResource() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ImportedResource(ImportedResource other) : this() {
          typeName_ = other.typeName_;
          state_ = other.state_ != null ? other.state_.Clone() : null;
          private_ = other.private_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ImportedResource Clone() {
          return new ImportedResource(this);
        }

        /// <summary>Field number for the "type_name" field.</summary>
        public const int TypeNameFieldNumber = 1;
        private string typeName_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TypeName {
          get { return typeName_; }
          set {
            typeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "state" field.</summary>
        public const int StateFieldNumber = 2;
        private global::Tfplugin5.DynamicValue state_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Tfplugin5.DynamicValue State {
          get { return state_; }
          set {
            state_ = value;
          }
        }

        /// <summary>Field number for the "private" field.</summary>
        public const int PrivateFieldNumber = 3;
        private pb::ByteString private_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString Private {
          get { return private_; }
          set {
            private_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ImportedResource);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ImportedResource other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (TypeName != other.TypeName) return false;
          if (!object.Equals(State, other.State)) return false;
          if (Private != other.Private) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (TypeName.Length != 0) hash ^= TypeName.GetHashCode();
          if (state_ != null) hash ^= State.GetHashCode();
          if (Private.Length != 0) hash ^= Private.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (TypeName.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(TypeName);
          }
          if (state_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(State);
          }
          if (Private.Length != 0) {
            output.WriteRawTag(26);
            output.WriteBytes(Private);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (TypeName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TypeName);
          }
          if (state_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(State);
          }
          if (Private.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Private);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ImportedResource other) {
          if (other == null) {
            return;
          }
          if (other.TypeName.Length != 0) {
            TypeName = other.TypeName;
          }
          if (other.state_ != null) {
            if (state_ == null) {
              State = new global::Tfplugin5.DynamicValue();
            }
            State.MergeFrom(other.State);
          }
          if (other.Private.Length != 0) {
            Private = other.Private;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                TypeName = input.ReadString();
                break;
              }
              case 18: {
                if (state_ == null) {
                  State = new global::Tfplugin5.DynamicValue();
                }
                input.ReadMessage(State);
                break;
              }
              case 26: {
                Private = input.ReadBytes();
                break;
              }
            }
          }
        }

      }

      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Tfplugin5.ImportResourceState.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          importedResources_ = other.importedResources_.Clone();
          diagnostics_ = other.diagnostics_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        /// <summary>Field number for the "imported_resources" field.</summary>
        public const int ImportedResourcesFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Tfplugin5.ImportResourceState.Types.ImportedResource> _repeated_importedResources_codec
            = pb::FieldCodec.ForMessage(10, global::Tfplugin5.ImportResourceState.Types.ImportedResource.Parser);
        private readonly pbc::RepeatedField<global::Tfplugin5.ImportResourceState.Types.ImportedResource> importedResources_ = new pbc::RepeatedField<global::Tfplugin5.ImportResourceState.Types.ImportedResource>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Tfplugin5.ImportResourceState.Types.ImportedResource> ImportedResources {
          get { return importedResources_; }
        }

        /// <summary>Field number for the "diagnostics" field.</summary>
        public const int DiagnosticsFieldNumber = 2;
        private static readonly pb::FieldCodec<global::Tfplugin5.Diagnostic> _repeated_diagnostics_codec
            = pb::FieldCodec.ForMessage(18, global::Tfplugin5.Diagnostic.Parser);
        private readonly pbc::RepeatedField<global::Tfplugin5.Diagnostic> diagnostics_ = new pbc::RepeatedField<global::Tfplugin5.Diagnostic>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Tfplugin5.Diagnostic> Diagnostics {
          get { return diagnostics_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!importedResources_.Equals(other.importedResources_)) return false;
          if(!diagnostics_.Equals(other.diagnostics_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= importedResources_.GetHashCode();
          hash ^= diagnostics_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          importedResources_.WriteTo(output, _repeated_importedResources_codec);
          diagnostics_.WriteTo(output, _repeated_diagnostics_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += importedResources_.CalculateSize(_repeated_importedResources_codec);
          size += diagnostics_.CalculateSize(_repeated_diagnostics_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          importedResources_.Add(other.importedResources_);
          diagnostics_.Add(other.diagnostics_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                importedResources_.AddEntriesFrom(input, _repeated_importedResources_codec);
                break;
              }
              case 18: {
                diagnostics_.AddEntriesFrom(input, _repeated_diagnostics_codec);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class ReadDataSource : pb::IMessage<ReadDataSource> {
    private static readonly pb::MessageParser<ReadDataSource> _parser = new pb::MessageParser<ReadDataSource>(() => new ReadDataSource());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReadDataSource> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tfplugin5.Tfplugin5Reflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadDataSource() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadDataSource(ReadDataSource other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadDataSource Clone() {
      return new ReadDataSource(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReadDataSource);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReadDataSource other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReadDataSource other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ReadDataSource message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Request : pb::IMessage<Request> {
        private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Request> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Tfplugin5.ReadDataSource.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request(Request other) : this() {
          typeName_ = other.typeName_;
          config_ = other.config_ != null ? other.config_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request Clone() {
          return new Request(this);
        }

        /// <summary>Field number for the "type_name" field.</summary>
        public const int TypeNameFieldNumber = 1;
        private string typeName_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TypeName {
          get { return typeName_; }
          set {
            typeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "config" field.</summary>
        public const int ConfigFieldNumber = 2;
        private global::Tfplugin5.DynamicValue config_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Tfplugin5.DynamicValue Config {
          get { return config_; }
          set {
            config_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Request);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Request other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (TypeName != other.TypeName) return false;
          if (!object.Equals(Config, other.Config)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (TypeName.Length != 0) hash ^= TypeName.GetHashCode();
          if (config_ != null) hash ^= Config.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (TypeName.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(TypeName);
          }
          if (config_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Config);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (TypeName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TypeName);
          }
          if (config_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Request other) {
          if (other == null) {
            return;
          }
          if (other.TypeName.Length != 0) {
            TypeName = other.TypeName;
          }
          if (other.config_ != null) {
            if (config_ == null) {
              Config = new global::Tfplugin5.DynamicValue();
            }
            Config.MergeFrom(other.Config);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                TypeName = input.ReadString();
                break;
              }
              case 18: {
                if (config_ == null) {
                  Config = new global::Tfplugin5.DynamicValue();
                }
                input.ReadMessage(Config);
                break;
              }
            }
          }
        }

      }

      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Tfplugin5.ReadDataSource.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          state_ = other.state_ != null ? other.state_.Clone() : null;
          diagnostics_ = other.diagnostics_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        /// <summary>Field number for the "state" field.</summary>
        public const int StateFieldNumber = 1;
        private global::Tfplugin5.DynamicValue state_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Tfplugin5.DynamicValue State {
          get { return state_; }
          set {
            state_ = value;
          }
        }

        /// <summary>Field number for the "diagnostics" field.</summary>
        public const int DiagnosticsFieldNumber = 2;
        private static readonly pb::FieldCodec<global::Tfplugin5.Diagnostic> _repeated_diagnostics_codec
            = pb::FieldCodec.ForMessage(18, global::Tfplugin5.Diagnostic.Parser);
        private readonly pbc::RepeatedField<global::Tfplugin5.Diagnostic> diagnostics_ = new pbc::RepeatedField<global::Tfplugin5.Diagnostic>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Tfplugin5.Diagnostic> Diagnostics {
          get { return diagnostics_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(State, other.State)) return false;
          if(!diagnostics_.Equals(other.diagnostics_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (state_ != null) hash ^= State.GetHashCode();
          hash ^= diagnostics_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (state_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(State);
          }
          diagnostics_.WriteTo(output, _repeated_diagnostics_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (state_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(State);
          }
          size += diagnostics_.CalculateSize(_repeated_diagnostics_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          if (other.state_ != null) {
            if (state_ == null) {
              State = new global::Tfplugin5.DynamicValue();
            }
            State.MergeFrom(other.State);
          }
          diagnostics_.Add(other.diagnostics_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (state_ == null) {
                  State = new global::Tfplugin5.DynamicValue();
                }
                input.ReadMessage(State);
                break;
              }
              case 18: {
                diagnostics_.AddEntriesFrom(input, _repeated_diagnostics_codec);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class GetProvisionerSchema : pb::IMessage<GetProvisionerSchema> {
    private static readonly pb::MessageParser<GetProvisionerSchema> _parser = new pb::MessageParser<GetProvisionerSchema>(() => new GetProvisionerSchema());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetProvisionerSchema> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tfplugin5.Tfplugin5Reflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetProvisionerSchema() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetProvisionerSchema(GetProvisionerSchema other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetProvisionerSchema Clone() {
      return new GetProvisionerSchema(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetProvisionerSchema);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetProvisionerSchema other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetProvisionerSchema other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the GetProvisionerSchema message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Request : pb::IMessage<Request> {
        private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Request> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Tfplugin5.GetProvisionerSchema.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request(Request other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request Clone() {
          return new Request(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Request);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Request other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Request other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        }

      }

      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Tfplugin5.GetProvisionerSchema.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          provisioner_ = other.provisioner_ != null ? other.provisioner_.Clone() : null;
          diagnostics_ = other.diagnostics_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        /// <summary>Field number for the "provisioner" field.</summary>
        public const int ProvisionerFieldNumber = 1;
        private global::Tfplugin5.Schema provisioner_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Tfplugin5.Schema Provisioner {
          get { return provisioner_; }
          set {
            provisioner_ = value;
          }
        }

        /// <summary>Field number for the "diagnostics" field.</summary>
        public const int DiagnosticsFieldNumber = 2;
        private static readonly pb::FieldCodec<global::Tfplugin5.Diagnostic> _repeated_diagnostics_codec
            = pb::FieldCodec.ForMessage(18, global::Tfplugin5.Diagnostic.Parser);
        private readonly pbc::RepeatedField<global::Tfplugin5.Diagnostic> diagnostics_ = new pbc::RepeatedField<global::Tfplugin5.Diagnostic>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Tfplugin5.Diagnostic> Diagnostics {
          get { return diagnostics_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Provisioner, other.Provisioner)) return false;
          if(!diagnostics_.Equals(other.diagnostics_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (provisioner_ != null) hash ^= Provisioner.GetHashCode();
          hash ^= diagnostics_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (provisioner_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Provisioner);
          }
          diagnostics_.WriteTo(output, _repeated_diagnostics_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (provisioner_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Provisioner);
          }
          size += diagnostics_.CalculateSize(_repeated_diagnostics_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          if (other.provisioner_ != null) {
            if (provisioner_ == null) {
              Provisioner = new global::Tfplugin5.Schema();
            }
            Provisioner.MergeFrom(other.Provisioner);
          }
          diagnostics_.Add(other.diagnostics_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (provisioner_ == null) {
                  Provisioner = new global::Tfplugin5.Schema();
                }
                input.ReadMessage(Provisioner);
                break;
              }
              case 18: {
                diagnostics_.AddEntriesFrom(input, _repeated_diagnostics_codec);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class ValidateProvisionerConfig : pb::IMessage<ValidateProvisionerConfig> {
    private static readonly pb::MessageParser<ValidateProvisionerConfig> _parser = new pb::MessageParser<ValidateProvisionerConfig>(() => new ValidateProvisionerConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ValidateProvisionerConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tfplugin5.Tfplugin5Reflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ValidateProvisionerConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ValidateProvisionerConfig(ValidateProvisionerConfig other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ValidateProvisionerConfig Clone() {
      return new ValidateProvisionerConfig(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ValidateProvisionerConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ValidateProvisionerConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ValidateProvisionerConfig other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ValidateProvisionerConfig message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Request : pb::IMessage<Request> {
        private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Request> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Tfplugin5.ValidateProvisionerConfig.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request(Request other) : this() {
          config_ = other.config_ != null ? other.config_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request Clone() {
          return new Request(this);
        }

        /// <summary>Field number for the "config" field.</summary>
        public const int ConfigFieldNumber = 1;
        private global::Tfplugin5.DynamicValue config_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Tfplugin5.DynamicValue Config {
          get { return config_; }
          set {
            config_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Request);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Request other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Config, other.Config)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (config_ != null) hash ^= Config.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (config_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Config);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (config_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Request other) {
          if (other == null) {
            return;
          }
          if (other.config_ != null) {
            if (config_ == null) {
              Config = new global::Tfplugin5.DynamicValue();
            }
            Config.MergeFrom(other.Config);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (config_ == null) {
                  Config = new global::Tfplugin5.DynamicValue();
                }
                input.ReadMessage(Config);
                break;
              }
            }
          }
        }

      }

      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Tfplugin5.ValidateProvisionerConfig.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          diagnostics_ = other.diagnostics_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        /// <summary>Field number for the "diagnostics" field.</summary>
        public const int DiagnosticsFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Tfplugin5.Diagnostic> _repeated_diagnostics_codec
            = pb::FieldCodec.ForMessage(10, global::Tfplugin5.Diagnostic.Parser);
        private readonly pbc::RepeatedField<global::Tfplugin5.Diagnostic> diagnostics_ = new pbc::RepeatedField<global::Tfplugin5.Diagnostic>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Tfplugin5.Diagnostic> Diagnostics {
          get { return diagnostics_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!diagnostics_.Equals(other.diagnostics_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= diagnostics_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          diagnostics_.WriteTo(output, _repeated_diagnostics_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += diagnostics_.CalculateSize(_repeated_diagnostics_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          diagnostics_.Add(other.diagnostics_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                diagnostics_.AddEntriesFrom(input, _repeated_diagnostics_codec);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class ProvisionResource : pb::IMessage<ProvisionResource> {
    private static readonly pb::MessageParser<ProvisionResource> _parser = new pb::MessageParser<ProvisionResource>(() => new ProvisionResource());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProvisionResource> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tfplugin5.Tfplugin5Reflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProvisionResource() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProvisionResource(ProvisionResource other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProvisionResource Clone() {
      return new ProvisionResource(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProvisionResource);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProvisionResource other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProvisionResource other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ProvisionResource message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Request : pb::IMessage<Request> {
        private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Request> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Tfplugin5.ProvisionResource.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request(Request other) : this() {
          config_ = other.config_ != null ? other.config_.Clone() : null;
          connection_ = other.connection_ != null ? other.connection_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request Clone() {
          return new Request(this);
        }

        /// <summary>Field number for the "config" field.</summary>
        public const int ConfigFieldNumber = 1;
        private global::Tfplugin5.DynamicValue config_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Tfplugin5.DynamicValue Config {
          get { return config_; }
          set {
            config_ = value;
          }
        }

        /// <summary>Field number for the "connection" field.</summary>
        public const int ConnectionFieldNumber = 2;
        private global::Tfplugin5.DynamicValue connection_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Tfplugin5.DynamicValue Connection {
          get { return connection_; }
          set {
            connection_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Request);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Request other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Config, other.Config)) return false;
          if (!object.Equals(Connection, other.Connection)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (config_ != null) hash ^= Config.GetHashCode();
          if (connection_ != null) hash ^= Connection.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (config_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Config);
          }
          if (connection_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Connection);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (config_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
          }
          if (connection_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Connection);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Request other) {
          if (other == null) {
            return;
          }
          if (other.config_ != null) {
            if (config_ == null) {
              Config = new global::Tfplugin5.DynamicValue();
            }
            Config.MergeFrom(other.Config);
          }
          if (other.connection_ != null) {
            if (connection_ == null) {
              Connection = new global::Tfplugin5.DynamicValue();
            }
            Connection.MergeFrom(other.Connection);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (config_ == null) {
                  Config = new global::Tfplugin5.DynamicValue();
                }
                input.ReadMessage(Config);
                break;
              }
              case 18: {
                if (connection_ == null) {
                  Connection = new global::Tfplugin5.DynamicValue();
                }
                input.ReadMessage(Connection);
                break;
              }
            }
          }
        }

      }

      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Tfplugin5.ProvisionResource.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          output_ = other.output_;
          diagnostics_ = other.diagnostics_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        /// <summary>Field number for the "output" field.</summary>
        public const int OutputFieldNumber = 1;
        private string output_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Output {
          get { return output_; }
          set {
            output_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "diagnostics" field.</summary>
        public const int DiagnosticsFieldNumber = 2;
        private static readonly pb::FieldCodec<global::Tfplugin5.Diagnostic> _repeated_diagnostics_codec
            = pb::FieldCodec.ForMessage(18, global::Tfplugin5.Diagnostic.Parser);
        private readonly pbc::RepeatedField<global::Tfplugin5.Diagnostic> diagnostics_ = new pbc::RepeatedField<global::Tfplugin5.Diagnostic>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Tfplugin5.Diagnostic> Diagnostics {
          get { return diagnostics_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Output != other.Output) return false;
          if(!diagnostics_.Equals(other.diagnostics_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Output.Length != 0) hash ^= Output.GetHashCode();
          hash ^= diagnostics_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Output.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Output);
          }
          diagnostics_.WriteTo(output, _repeated_diagnostics_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Output.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Output);
          }
          size += diagnostics_.CalculateSize(_repeated_diagnostics_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          if (other.Output.Length != 0) {
            Output = other.Output;
          }
          diagnostics_.Add(other.diagnostics_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Output = input.ReadString();
                break;
              }
              case 18: {
                diagnostics_.AddEntriesFrom(input, _repeated_diagnostics_codec);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
