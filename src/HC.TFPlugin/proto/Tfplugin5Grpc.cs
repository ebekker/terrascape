// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: proto/tfplugin5.proto
// </auto-generated>
// Original file comments:
// From:
//  https://github.com/hashicorp/terraform/blob/master/internal/tfplugin5/tfplugin5.proto
//
// Terraform Plugin RPC protocol version 5.0
//
// This file defines version 5.0 of the RPC protocol. To implement a plugin
// against this protocol, copy this definition into your own codebase and
// use protoc to generate stubs for your target language.
//
// This file will be updated in-place in the source Terraform repository for
// any minor versions of protocol 5, but later minor versions will always be
// backwards compatible. Breaking changes, if any are required, will come
// in a subsequent major version with its own separate proto definition.
//
// Note that only the proto files included in a release tag of Terraform are
// official protocol releases. Proto files taken from other commits may include
// incomplete changes or features that did not make it into a final release.
// In all reasonable cases, plugin developers should take the proto file from
// the tag of the most recent release of Terraform, and not from the master
// branch or any other development branch.
//
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Tfplugin5 {
  public static partial class Provider
  {
    static readonly string __ServiceName = "tfplugin5.Provider";

    static readonly grpc::Marshaller<global::Tfplugin5.GetProviderSchema.Types.Request> __Marshaller_tfplugin5_GetProviderSchema_Request = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Tfplugin5.GetProviderSchema.Types.Request.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Tfplugin5.GetProviderSchema.Types.Response> __Marshaller_tfplugin5_GetProviderSchema_Response = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Tfplugin5.GetProviderSchema.Types.Response.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Tfplugin5.PrepareProviderConfig.Types.Request> __Marshaller_tfplugin5_PrepareProviderConfig_Request = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Tfplugin5.PrepareProviderConfig.Types.Request.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Tfplugin5.PrepareProviderConfig.Types.Response> __Marshaller_tfplugin5_PrepareProviderConfig_Response = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Tfplugin5.PrepareProviderConfig.Types.Response.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Tfplugin5.ValidateResourceTypeConfig.Types.Request> __Marshaller_tfplugin5_ValidateResourceTypeConfig_Request = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Tfplugin5.ValidateResourceTypeConfig.Types.Request.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Tfplugin5.ValidateResourceTypeConfig.Types.Response> __Marshaller_tfplugin5_ValidateResourceTypeConfig_Response = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Tfplugin5.ValidateResourceTypeConfig.Types.Response.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Tfplugin5.ValidateDataSourceConfig.Types.Request> __Marshaller_tfplugin5_ValidateDataSourceConfig_Request = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Tfplugin5.ValidateDataSourceConfig.Types.Request.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Tfplugin5.ValidateDataSourceConfig.Types.Response> __Marshaller_tfplugin5_ValidateDataSourceConfig_Response = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Tfplugin5.ValidateDataSourceConfig.Types.Response.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Tfplugin5.UpgradeResourceState.Types.Request> __Marshaller_tfplugin5_UpgradeResourceState_Request = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Tfplugin5.UpgradeResourceState.Types.Request.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Tfplugin5.UpgradeResourceState.Types.Response> __Marshaller_tfplugin5_UpgradeResourceState_Response = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Tfplugin5.UpgradeResourceState.Types.Response.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Tfplugin5.Configure.Types.Request> __Marshaller_tfplugin5_Configure_Request = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Tfplugin5.Configure.Types.Request.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Tfplugin5.Configure.Types.Response> __Marshaller_tfplugin5_Configure_Response = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Tfplugin5.Configure.Types.Response.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Tfplugin5.ReadResource.Types.Request> __Marshaller_tfplugin5_ReadResource_Request = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Tfplugin5.ReadResource.Types.Request.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Tfplugin5.ReadResource.Types.Response> __Marshaller_tfplugin5_ReadResource_Response = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Tfplugin5.ReadResource.Types.Response.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Tfplugin5.PlanResourceChange.Types.Request> __Marshaller_tfplugin5_PlanResourceChange_Request = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Tfplugin5.PlanResourceChange.Types.Request.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Tfplugin5.PlanResourceChange.Types.Response> __Marshaller_tfplugin5_PlanResourceChange_Response = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Tfplugin5.PlanResourceChange.Types.Response.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Tfplugin5.ApplyResourceChange.Types.Request> __Marshaller_tfplugin5_ApplyResourceChange_Request = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Tfplugin5.ApplyResourceChange.Types.Request.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Tfplugin5.ApplyResourceChange.Types.Response> __Marshaller_tfplugin5_ApplyResourceChange_Response = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Tfplugin5.ApplyResourceChange.Types.Response.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Tfplugin5.ImportResourceState.Types.Request> __Marshaller_tfplugin5_ImportResourceState_Request = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Tfplugin5.ImportResourceState.Types.Request.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Tfplugin5.ImportResourceState.Types.Response> __Marshaller_tfplugin5_ImportResourceState_Response = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Tfplugin5.ImportResourceState.Types.Response.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Tfplugin5.ReadDataSource.Types.Request> __Marshaller_tfplugin5_ReadDataSource_Request = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Tfplugin5.ReadDataSource.Types.Request.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Tfplugin5.ReadDataSource.Types.Response> __Marshaller_tfplugin5_ReadDataSource_Response = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Tfplugin5.ReadDataSource.Types.Response.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Tfplugin5.Stop.Types.Request> __Marshaller_tfplugin5_Stop_Request = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Tfplugin5.Stop.Types.Request.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Tfplugin5.Stop.Types.Response> __Marshaller_tfplugin5_Stop_Response = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Tfplugin5.Stop.Types.Response.Parser.ParseFrom);

    static readonly grpc::Method<global::Tfplugin5.GetProviderSchema.Types.Request, global::Tfplugin5.GetProviderSchema.Types.Response> __Method_GetSchema = new grpc::Method<global::Tfplugin5.GetProviderSchema.Types.Request, global::Tfplugin5.GetProviderSchema.Types.Response>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetSchema",
        __Marshaller_tfplugin5_GetProviderSchema_Request,
        __Marshaller_tfplugin5_GetProviderSchema_Response);

    static readonly grpc::Method<global::Tfplugin5.PrepareProviderConfig.Types.Request, global::Tfplugin5.PrepareProviderConfig.Types.Response> __Method_PrepareProviderConfig = new grpc::Method<global::Tfplugin5.PrepareProviderConfig.Types.Request, global::Tfplugin5.PrepareProviderConfig.Types.Response>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PrepareProviderConfig",
        __Marshaller_tfplugin5_PrepareProviderConfig_Request,
        __Marshaller_tfplugin5_PrepareProviderConfig_Response);

    static readonly grpc::Method<global::Tfplugin5.ValidateResourceTypeConfig.Types.Request, global::Tfplugin5.ValidateResourceTypeConfig.Types.Response> __Method_ValidateResourceTypeConfig = new grpc::Method<global::Tfplugin5.ValidateResourceTypeConfig.Types.Request, global::Tfplugin5.ValidateResourceTypeConfig.Types.Response>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ValidateResourceTypeConfig",
        __Marshaller_tfplugin5_ValidateResourceTypeConfig_Request,
        __Marshaller_tfplugin5_ValidateResourceTypeConfig_Response);

    static readonly grpc::Method<global::Tfplugin5.ValidateDataSourceConfig.Types.Request, global::Tfplugin5.ValidateDataSourceConfig.Types.Response> __Method_ValidateDataSourceConfig = new grpc::Method<global::Tfplugin5.ValidateDataSourceConfig.Types.Request, global::Tfplugin5.ValidateDataSourceConfig.Types.Response>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ValidateDataSourceConfig",
        __Marshaller_tfplugin5_ValidateDataSourceConfig_Request,
        __Marshaller_tfplugin5_ValidateDataSourceConfig_Response);

    static readonly grpc::Method<global::Tfplugin5.UpgradeResourceState.Types.Request, global::Tfplugin5.UpgradeResourceState.Types.Response> __Method_UpgradeResourceState = new grpc::Method<global::Tfplugin5.UpgradeResourceState.Types.Request, global::Tfplugin5.UpgradeResourceState.Types.Response>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpgradeResourceState",
        __Marshaller_tfplugin5_UpgradeResourceState_Request,
        __Marshaller_tfplugin5_UpgradeResourceState_Response);

    static readonly grpc::Method<global::Tfplugin5.Configure.Types.Request, global::Tfplugin5.Configure.Types.Response> __Method_Configure = new grpc::Method<global::Tfplugin5.Configure.Types.Request, global::Tfplugin5.Configure.Types.Response>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Configure",
        __Marshaller_tfplugin5_Configure_Request,
        __Marshaller_tfplugin5_Configure_Response);

    static readonly grpc::Method<global::Tfplugin5.ReadResource.Types.Request, global::Tfplugin5.ReadResource.Types.Response> __Method_ReadResource = new grpc::Method<global::Tfplugin5.ReadResource.Types.Request, global::Tfplugin5.ReadResource.Types.Response>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ReadResource",
        __Marshaller_tfplugin5_ReadResource_Request,
        __Marshaller_tfplugin5_ReadResource_Response);

    static readonly grpc::Method<global::Tfplugin5.PlanResourceChange.Types.Request, global::Tfplugin5.PlanResourceChange.Types.Response> __Method_PlanResourceChange = new grpc::Method<global::Tfplugin5.PlanResourceChange.Types.Request, global::Tfplugin5.PlanResourceChange.Types.Response>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PlanResourceChange",
        __Marshaller_tfplugin5_PlanResourceChange_Request,
        __Marshaller_tfplugin5_PlanResourceChange_Response);

    static readonly grpc::Method<global::Tfplugin5.ApplyResourceChange.Types.Request, global::Tfplugin5.ApplyResourceChange.Types.Response> __Method_ApplyResourceChange = new grpc::Method<global::Tfplugin5.ApplyResourceChange.Types.Request, global::Tfplugin5.ApplyResourceChange.Types.Response>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ApplyResourceChange",
        __Marshaller_tfplugin5_ApplyResourceChange_Request,
        __Marshaller_tfplugin5_ApplyResourceChange_Response);

    static readonly grpc::Method<global::Tfplugin5.ImportResourceState.Types.Request, global::Tfplugin5.ImportResourceState.Types.Response> __Method_ImportResourceState = new grpc::Method<global::Tfplugin5.ImportResourceState.Types.Request, global::Tfplugin5.ImportResourceState.Types.Response>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ImportResourceState",
        __Marshaller_tfplugin5_ImportResourceState_Request,
        __Marshaller_tfplugin5_ImportResourceState_Response);

    static readonly grpc::Method<global::Tfplugin5.ReadDataSource.Types.Request, global::Tfplugin5.ReadDataSource.Types.Response> __Method_ReadDataSource = new grpc::Method<global::Tfplugin5.ReadDataSource.Types.Request, global::Tfplugin5.ReadDataSource.Types.Response>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ReadDataSource",
        __Marshaller_tfplugin5_ReadDataSource_Request,
        __Marshaller_tfplugin5_ReadDataSource_Response);

    static readonly grpc::Method<global::Tfplugin5.Stop.Types.Request, global::Tfplugin5.Stop.Types.Response> __Method_Stop = new grpc::Method<global::Tfplugin5.Stop.Types.Request, global::Tfplugin5.Stop.Types.Response>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Stop",
        __Marshaller_tfplugin5_Stop_Request,
        __Marshaller_tfplugin5_Stop_Response);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Tfplugin5.Tfplugin5Reflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Provider</summary>
    public abstract partial class ProviderBase
    {
      /// <summary>
      ///////// Information about what a provider supports/expects
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Tfplugin5.GetProviderSchema.Types.Response> GetSchema(global::Tfplugin5.GetProviderSchema.Types.Request request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Tfplugin5.PrepareProviderConfig.Types.Response> PrepareProviderConfig(global::Tfplugin5.PrepareProviderConfig.Types.Request request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Tfplugin5.ValidateResourceTypeConfig.Types.Response> ValidateResourceTypeConfig(global::Tfplugin5.ValidateResourceTypeConfig.Types.Request request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Tfplugin5.ValidateDataSourceConfig.Types.Response> ValidateDataSourceConfig(global::Tfplugin5.ValidateDataSourceConfig.Types.Request request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Tfplugin5.UpgradeResourceState.Types.Response> UpgradeResourceState(global::Tfplugin5.UpgradeResourceState.Types.Request request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///////// One-time initialization, called before other functions below
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Tfplugin5.Configure.Types.Response> Configure(global::Tfplugin5.Configure.Types.Request request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///////// Managed Resource Lifecycle
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Tfplugin5.ReadResource.Types.Response> ReadResource(global::Tfplugin5.ReadResource.Types.Request request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Tfplugin5.PlanResourceChange.Types.Response> PlanResourceChange(global::Tfplugin5.PlanResourceChange.Types.Request request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Tfplugin5.ApplyResourceChange.Types.Response> ApplyResourceChange(global::Tfplugin5.ApplyResourceChange.Types.Request request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Tfplugin5.ImportResourceState.Types.Response> ImportResourceState(global::Tfplugin5.ImportResourceState.Types.Request request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Tfplugin5.ReadDataSource.Types.Response> ReadDataSource(global::Tfplugin5.ReadDataSource.Types.Request request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///////// Graceful Shutdown
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Tfplugin5.Stop.Types.Response> Stop(global::Tfplugin5.Stop.Types.Request request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for Provider</summary>
    public partial class ProviderClient : grpc::ClientBase<ProviderClient>
    {
      /// <summary>Creates a new client for Provider</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public ProviderClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Provider that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public ProviderClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected ProviderClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected ProviderClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      ///////// Information about what a provider supports/expects
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Tfplugin5.GetProviderSchema.Types.Response GetSchema(global::Tfplugin5.GetProviderSchema.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSchema(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///////// Information about what a provider supports/expects
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Tfplugin5.GetProviderSchema.Types.Response GetSchema(global::Tfplugin5.GetProviderSchema.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetSchema, null, options, request);
      }
      /// <summary>
      ///////// Information about what a provider supports/expects
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Tfplugin5.GetProviderSchema.Types.Response> GetSchemaAsync(global::Tfplugin5.GetProviderSchema.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSchemaAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///////// Information about what a provider supports/expects
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Tfplugin5.GetProviderSchema.Types.Response> GetSchemaAsync(global::Tfplugin5.GetProviderSchema.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetSchema, null, options, request);
      }
      public virtual global::Tfplugin5.PrepareProviderConfig.Types.Response PrepareProviderConfig(global::Tfplugin5.PrepareProviderConfig.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PrepareProviderConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Tfplugin5.PrepareProviderConfig.Types.Response PrepareProviderConfig(global::Tfplugin5.PrepareProviderConfig.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_PrepareProviderConfig, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Tfplugin5.PrepareProviderConfig.Types.Response> PrepareProviderConfigAsync(global::Tfplugin5.PrepareProviderConfig.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PrepareProviderConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Tfplugin5.PrepareProviderConfig.Types.Response> PrepareProviderConfigAsync(global::Tfplugin5.PrepareProviderConfig.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_PrepareProviderConfig, null, options, request);
      }
      public virtual global::Tfplugin5.ValidateResourceTypeConfig.Types.Response ValidateResourceTypeConfig(global::Tfplugin5.ValidateResourceTypeConfig.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ValidateResourceTypeConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Tfplugin5.ValidateResourceTypeConfig.Types.Response ValidateResourceTypeConfig(global::Tfplugin5.ValidateResourceTypeConfig.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ValidateResourceTypeConfig, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Tfplugin5.ValidateResourceTypeConfig.Types.Response> ValidateResourceTypeConfigAsync(global::Tfplugin5.ValidateResourceTypeConfig.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ValidateResourceTypeConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Tfplugin5.ValidateResourceTypeConfig.Types.Response> ValidateResourceTypeConfigAsync(global::Tfplugin5.ValidateResourceTypeConfig.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ValidateResourceTypeConfig, null, options, request);
      }
      public virtual global::Tfplugin5.ValidateDataSourceConfig.Types.Response ValidateDataSourceConfig(global::Tfplugin5.ValidateDataSourceConfig.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ValidateDataSourceConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Tfplugin5.ValidateDataSourceConfig.Types.Response ValidateDataSourceConfig(global::Tfplugin5.ValidateDataSourceConfig.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ValidateDataSourceConfig, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Tfplugin5.ValidateDataSourceConfig.Types.Response> ValidateDataSourceConfigAsync(global::Tfplugin5.ValidateDataSourceConfig.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ValidateDataSourceConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Tfplugin5.ValidateDataSourceConfig.Types.Response> ValidateDataSourceConfigAsync(global::Tfplugin5.ValidateDataSourceConfig.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ValidateDataSourceConfig, null, options, request);
      }
      public virtual global::Tfplugin5.UpgradeResourceState.Types.Response UpgradeResourceState(global::Tfplugin5.UpgradeResourceState.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpgradeResourceState(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Tfplugin5.UpgradeResourceState.Types.Response UpgradeResourceState(global::Tfplugin5.UpgradeResourceState.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpgradeResourceState, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Tfplugin5.UpgradeResourceState.Types.Response> UpgradeResourceStateAsync(global::Tfplugin5.UpgradeResourceState.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpgradeResourceStateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Tfplugin5.UpgradeResourceState.Types.Response> UpgradeResourceStateAsync(global::Tfplugin5.UpgradeResourceState.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpgradeResourceState, null, options, request);
      }
      /// <summary>
      ///////// One-time initialization, called before other functions below
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Tfplugin5.Configure.Types.Response Configure(global::Tfplugin5.Configure.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Configure(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///////// One-time initialization, called before other functions below
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Tfplugin5.Configure.Types.Response Configure(global::Tfplugin5.Configure.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Configure, null, options, request);
      }
      /// <summary>
      ///////// One-time initialization, called before other functions below
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Tfplugin5.Configure.Types.Response> ConfigureAsync(global::Tfplugin5.Configure.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///////// One-time initialization, called before other functions below
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Tfplugin5.Configure.Types.Response> ConfigureAsync(global::Tfplugin5.Configure.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Configure, null, options, request);
      }
      /// <summary>
      ///////// Managed Resource Lifecycle
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Tfplugin5.ReadResource.Types.Response ReadResource(global::Tfplugin5.ReadResource.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReadResource(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///////// Managed Resource Lifecycle
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Tfplugin5.ReadResource.Types.Response ReadResource(global::Tfplugin5.ReadResource.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ReadResource, null, options, request);
      }
      /// <summary>
      ///////// Managed Resource Lifecycle
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Tfplugin5.ReadResource.Types.Response> ReadResourceAsync(global::Tfplugin5.ReadResource.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReadResourceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///////// Managed Resource Lifecycle
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Tfplugin5.ReadResource.Types.Response> ReadResourceAsync(global::Tfplugin5.ReadResource.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ReadResource, null, options, request);
      }
      public virtual global::Tfplugin5.PlanResourceChange.Types.Response PlanResourceChange(global::Tfplugin5.PlanResourceChange.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PlanResourceChange(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Tfplugin5.PlanResourceChange.Types.Response PlanResourceChange(global::Tfplugin5.PlanResourceChange.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_PlanResourceChange, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Tfplugin5.PlanResourceChange.Types.Response> PlanResourceChangeAsync(global::Tfplugin5.PlanResourceChange.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PlanResourceChangeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Tfplugin5.PlanResourceChange.Types.Response> PlanResourceChangeAsync(global::Tfplugin5.PlanResourceChange.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_PlanResourceChange, null, options, request);
      }
      public virtual global::Tfplugin5.ApplyResourceChange.Types.Response ApplyResourceChange(global::Tfplugin5.ApplyResourceChange.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ApplyResourceChange(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Tfplugin5.ApplyResourceChange.Types.Response ApplyResourceChange(global::Tfplugin5.ApplyResourceChange.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ApplyResourceChange, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Tfplugin5.ApplyResourceChange.Types.Response> ApplyResourceChangeAsync(global::Tfplugin5.ApplyResourceChange.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ApplyResourceChangeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Tfplugin5.ApplyResourceChange.Types.Response> ApplyResourceChangeAsync(global::Tfplugin5.ApplyResourceChange.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ApplyResourceChange, null, options, request);
      }
      public virtual global::Tfplugin5.ImportResourceState.Types.Response ImportResourceState(global::Tfplugin5.ImportResourceState.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ImportResourceState(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Tfplugin5.ImportResourceState.Types.Response ImportResourceState(global::Tfplugin5.ImportResourceState.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ImportResourceState, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Tfplugin5.ImportResourceState.Types.Response> ImportResourceStateAsync(global::Tfplugin5.ImportResourceState.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ImportResourceStateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Tfplugin5.ImportResourceState.Types.Response> ImportResourceStateAsync(global::Tfplugin5.ImportResourceState.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ImportResourceState, null, options, request);
      }
      public virtual global::Tfplugin5.ReadDataSource.Types.Response ReadDataSource(global::Tfplugin5.ReadDataSource.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReadDataSource(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Tfplugin5.ReadDataSource.Types.Response ReadDataSource(global::Tfplugin5.ReadDataSource.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ReadDataSource, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Tfplugin5.ReadDataSource.Types.Response> ReadDataSourceAsync(global::Tfplugin5.ReadDataSource.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReadDataSourceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Tfplugin5.ReadDataSource.Types.Response> ReadDataSourceAsync(global::Tfplugin5.ReadDataSource.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ReadDataSource, null, options, request);
      }
      /// <summary>
      ///////// Graceful Shutdown
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Tfplugin5.Stop.Types.Response Stop(global::Tfplugin5.Stop.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Stop(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///////// Graceful Shutdown
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Tfplugin5.Stop.Types.Response Stop(global::Tfplugin5.Stop.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Stop, null, options, request);
      }
      /// <summary>
      ///////// Graceful Shutdown
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Tfplugin5.Stop.Types.Response> StopAsync(global::Tfplugin5.Stop.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StopAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///////// Graceful Shutdown
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Tfplugin5.Stop.Types.Response> StopAsync(global::Tfplugin5.Stop.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Stop, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override ProviderClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new ProviderClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(ProviderBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetSchema, serviceImpl.GetSchema)
          .AddMethod(__Method_PrepareProviderConfig, serviceImpl.PrepareProviderConfig)
          .AddMethod(__Method_ValidateResourceTypeConfig, serviceImpl.ValidateResourceTypeConfig)
          .AddMethod(__Method_ValidateDataSourceConfig, serviceImpl.ValidateDataSourceConfig)
          .AddMethod(__Method_UpgradeResourceState, serviceImpl.UpgradeResourceState)
          .AddMethod(__Method_Configure, serviceImpl.Configure)
          .AddMethod(__Method_ReadResource, serviceImpl.ReadResource)
          .AddMethod(__Method_PlanResourceChange, serviceImpl.PlanResourceChange)
          .AddMethod(__Method_ApplyResourceChange, serviceImpl.ApplyResourceChange)
          .AddMethod(__Method_ImportResourceState, serviceImpl.ImportResourceState)
          .AddMethod(__Method_ReadDataSource, serviceImpl.ReadDataSource)
          .AddMethod(__Method_Stop, serviceImpl.Stop).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, ProviderBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetSchema, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Tfplugin5.GetProviderSchema.Types.Request, global::Tfplugin5.GetProviderSchema.Types.Response>(serviceImpl.GetSchema));
      serviceBinder.AddMethod(__Method_PrepareProviderConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Tfplugin5.PrepareProviderConfig.Types.Request, global::Tfplugin5.PrepareProviderConfig.Types.Response>(serviceImpl.PrepareProviderConfig));
      serviceBinder.AddMethod(__Method_ValidateResourceTypeConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Tfplugin5.ValidateResourceTypeConfig.Types.Request, global::Tfplugin5.ValidateResourceTypeConfig.Types.Response>(serviceImpl.ValidateResourceTypeConfig));
      serviceBinder.AddMethod(__Method_ValidateDataSourceConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Tfplugin5.ValidateDataSourceConfig.Types.Request, global::Tfplugin5.ValidateDataSourceConfig.Types.Response>(serviceImpl.ValidateDataSourceConfig));
      serviceBinder.AddMethod(__Method_UpgradeResourceState, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Tfplugin5.UpgradeResourceState.Types.Request, global::Tfplugin5.UpgradeResourceState.Types.Response>(serviceImpl.UpgradeResourceState));
      serviceBinder.AddMethod(__Method_Configure, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Tfplugin5.Configure.Types.Request, global::Tfplugin5.Configure.Types.Response>(serviceImpl.Configure));
      serviceBinder.AddMethod(__Method_ReadResource, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Tfplugin5.ReadResource.Types.Request, global::Tfplugin5.ReadResource.Types.Response>(serviceImpl.ReadResource));
      serviceBinder.AddMethod(__Method_PlanResourceChange, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Tfplugin5.PlanResourceChange.Types.Request, global::Tfplugin5.PlanResourceChange.Types.Response>(serviceImpl.PlanResourceChange));
      serviceBinder.AddMethod(__Method_ApplyResourceChange, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Tfplugin5.ApplyResourceChange.Types.Request, global::Tfplugin5.ApplyResourceChange.Types.Response>(serviceImpl.ApplyResourceChange));
      serviceBinder.AddMethod(__Method_ImportResourceState, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Tfplugin5.ImportResourceState.Types.Request, global::Tfplugin5.ImportResourceState.Types.Response>(serviceImpl.ImportResourceState));
      serviceBinder.AddMethod(__Method_ReadDataSource, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Tfplugin5.ReadDataSource.Types.Request, global::Tfplugin5.ReadDataSource.Types.Response>(serviceImpl.ReadDataSource));
      serviceBinder.AddMethod(__Method_Stop, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Tfplugin5.Stop.Types.Request, global::Tfplugin5.Stop.Types.Response>(serviceImpl.Stop));
    }

  }
  public static partial class Provisioner
  {
    static readonly string __ServiceName = "tfplugin5.Provisioner";

    static readonly grpc::Marshaller<global::Tfplugin5.GetProvisionerSchema.Types.Request> __Marshaller_tfplugin5_GetProvisionerSchema_Request = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Tfplugin5.GetProvisionerSchema.Types.Request.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Tfplugin5.GetProvisionerSchema.Types.Response> __Marshaller_tfplugin5_GetProvisionerSchema_Response = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Tfplugin5.GetProvisionerSchema.Types.Response.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Tfplugin5.ValidateProvisionerConfig.Types.Request> __Marshaller_tfplugin5_ValidateProvisionerConfig_Request = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Tfplugin5.ValidateProvisionerConfig.Types.Request.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Tfplugin5.ValidateProvisionerConfig.Types.Response> __Marshaller_tfplugin5_ValidateProvisionerConfig_Response = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Tfplugin5.ValidateProvisionerConfig.Types.Response.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Tfplugin5.ProvisionResource.Types.Request> __Marshaller_tfplugin5_ProvisionResource_Request = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Tfplugin5.ProvisionResource.Types.Request.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Tfplugin5.ProvisionResource.Types.Response> __Marshaller_tfplugin5_ProvisionResource_Response = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Tfplugin5.ProvisionResource.Types.Response.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Tfplugin5.Stop.Types.Request> __Marshaller_tfplugin5_Stop_Request = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Tfplugin5.Stop.Types.Request.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Tfplugin5.Stop.Types.Response> __Marshaller_tfplugin5_Stop_Response = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Tfplugin5.Stop.Types.Response.Parser.ParseFrom);

    static readonly grpc::Method<global::Tfplugin5.GetProvisionerSchema.Types.Request, global::Tfplugin5.GetProvisionerSchema.Types.Response> __Method_GetSchema = new grpc::Method<global::Tfplugin5.GetProvisionerSchema.Types.Request, global::Tfplugin5.GetProvisionerSchema.Types.Response>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetSchema",
        __Marshaller_tfplugin5_GetProvisionerSchema_Request,
        __Marshaller_tfplugin5_GetProvisionerSchema_Response);

    static readonly grpc::Method<global::Tfplugin5.ValidateProvisionerConfig.Types.Request, global::Tfplugin5.ValidateProvisionerConfig.Types.Response> __Method_ValidateProvisionerConfig = new grpc::Method<global::Tfplugin5.ValidateProvisionerConfig.Types.Request, global::Tfplugin5.ValidateProvisionerConfig.Types.Response>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ValidateProvisionerConfig",
        __Marshaller_tfplugin5_ValidateProvisionerConfig_Request,
        __Marshaller_tfplugin5_ValidateProvisionerConfig_Response);

    static readonly grpc::Method<global::Tfplugin5.ProvisionResource.Types.Request, global::Tfplugin5.ProvisionResource.Types.Response> __Method_ProvisionResource = new grpc::Method<global::Tfplugin5.ProvisionResource.Types.Request, global::Tfplugin5.ProvisionResource.Types.Response>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "ProvisionResource",
        __Marshaller_tfplugin5_ProvisionResource_Request,
        __Marshaller_tfplugin5_ProvisionResource_Response);

    static readonly grpc::Method<global::Tfplugin5.Stop.Types.Request, global::Tfplugin5.Stop.Types.Response> __Method_Stop = new grpc::Method<global::Tfplugin5.Stop.Types.Request, global::Tfplugin5.Stop.Types.Response>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Stop",
        __Marshaller_tfplugin5_Stop_Request,
        __Marshaller_tfplugin5_Stop_Response);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Tfplugin5.Tfplugin5Reflection.Descriptor.Services[1]; }
    }

    /// <summary>Base class for server-side implementations of Provisioner</summary>
    public abstract partial class ProvisionerBase
    {
      public virtual global::System.Threading.Tasks.Task<global::Tfplugin5.GetProvisionerSchema.Types.Response> GetSchema(global::Tfplugin5.GetProvisionerSchema.Types.Request request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Tfplugin5.ValidateProvisionerConfig.Types.Response> ValidateProvisionerConfig(global::Tfplugin5.ValidateProvisionerConfig.Types.Request request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task ProvisionResource(global::Tfplugin5.ProvisionResource.Types.Request request, grpc::IServerStreamWriter<global::Tfplugin5.ProvisionResource.Types.Response> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Tfplugin5.Stop.Types.Response> Stop(global::Tfplugin5.Stop.Types.Request request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for Provisioner</summary>
    public partial class ProvisionerClient : grpc::ClientBase<ProvisionerClient>
    {
      /// <summary>Creates a new client for Provisioner</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public ProvisionerClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Provisioner that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public ProvisionerClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected ProvisionerClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected ProvisionerClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::Tfplugin5.GetProvisionerSchema.Types.Response GetSchema(global::Tfplugin5.GetProvisionerSchema.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSchema(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Tfplugin5.GetProvisionerSchema.Types.Response GetSchema(global::Tfplugin5.GetProvisionerSchema.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetSchema, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Tfplugin5.GetProvisionerSchema.Types.Response> GetSchemaAsync(global::Tfplugin5.GetProvisionerSchema.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSchemaAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Tfplugin5.GetProvisionerSchema.Types.Response> GetSchemaAsync(global::Tfplugin5.GetProvisionerSchema.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetSchema, null, options, request);
      }
      public virtual global::Tfplugin5.ValidateProvisionerConfig.Types.Response ValidateProvisionerConfig(global::Tfplugin5.ValidateProvisionerConfig.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ValidateProvisionerConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Tfplugin5.ValidateProvisionerConfig.Types.Response ValidateProvisionerConfig(global::Tfplugin5.ValidateProvisionerConfig.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ValidateProvisionerConfig, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Tfplugin5.ValidateProvisionerConfig.Types.Response> ValidateProvisionerConfigAsync(global::Tfplugin5.ValidateProvisionerConfig.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ValidateProvisionerConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Tfplugin5.ValidateProvisionerConfig.Types.Response> ValidateProvisionerConfigAsync(global::Tfplugin5.ValidateProvisionerConfig.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ValidateProvisionerConfig, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::Tfplugin5.ProvisionResource.Types.Response> ProvisionResource(global::Tfplugin5.ProvisionResource.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ProvisionResource(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::Tfplugin5.ProvisionResource.Types.Response> ProvisionResource(global::Tfplugin5.ProvisionResource.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_ProvisionResource, null, options, request);
      }
      public virtual global::Tfplugin5.Stop.Types.Response Stop(global::Tfplugin5.Stop.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Stop(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Tfplugin5.Stop.Types.Response Stop(global::Tfplugin5.Stop.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Stop, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Tfplugin5.Stop.Types.Response> StopAsync(global::Tfplugin5.Stop.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StopAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Tfplugin5.Stop.Types.Response> StopAsync(global::Tfplugin5.Stop.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Stop, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override ProvisionerClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new ProvisionerClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(ProvisionerBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetSchema, serviceImpl.GetSchema)
          .AddMethod(__Method_ValidateProvisionerConfig, serviceImpl.ValidateProvisionerConfig)
          .AddMethod(__Method_ProvisionResource, serviceImpl.ProvisionResource)
          .AddMethod(__Method_Stop, serviceImpl.Stop).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, ProvisionerBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetSchema, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Tfplugin5.GetProvisionerSchema.Types.Request, global::Tfplugin5.GetProvisionerSchema.Types.Response>(serviceImpl.GetSchema));
      serviceBinder.AddMethod(__Method_ValidateProvisionerConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Tfplugin5.ValidateProvisionerConfig.Types.Request, global::Tfplugin5.ValidateProvisionerConfig.Types.Response>(serviceImpl.ValidateProvisionerConfig));
      serviceBinder.AddMethod(__Method_ProvisionResource, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::Tfplugin5.ProvisionResource.Types.Request, global::Tfplugin5.ProvisionResource.Types.Response>(serviceImpl.ProvisionResource));
      serviceBinder.AddMethod(__Method_Stop, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Tfplugin5.Stop.Types.Request, global::Tfplugin5.Stop.Types.Response>(serviceImpl.Stop));
    }

  }
}
#endregion
